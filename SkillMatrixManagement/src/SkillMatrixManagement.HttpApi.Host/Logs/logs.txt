2025-03-31 15:30:04.210 +05:30 [INF] Starting SkillMatrixManagement.HttpApi.Host.
2025-03-31 15:30:16.088 +05:30 [INF] Loaded ABP modules:
2025-03-31 15:30:16.092 +05:30 [INF] - SkillMatrixManagement.SkillMatrixManagementHttpApiHostModule
2025-03-31 15:30:16.092 +05:30 [INF]   - SkillMatrixManagement.SkillMatrixManagementHttpApiModule
2025-03-31 15:30:16.092 +05:30 [INF]     - SkillMatrixManagement.SkillMatrixManagementApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]       - SkillMatrixManagement.SkillMatrixManagementDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.Validation.AbpValidationModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Validation.AbpValidationAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Localization.AbpLocalizationModule
2025-03-31 15:30:16.092 +05:30 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2025-03-31 15:30:16.092 +05:30 [INF]               - Volo.Abp.Settings.AbpSettingsModule
2025-03-31 15:30:16.092 +05:30 [INF]                 - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]                 - Volo.Abp.Security.AbpSecurityModule
2025-03-31 15:30:16.092 +05:30 [INF]                 - Volo.Abp.Data.AbpDataModule
2025-03-31 15:30:16.092 +05:30 [INF]                   - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2025-03-31 15:30:16.092 +05:30 [INF]                   - Volo.Abp.Uow.AbpUnitOfWorkModule
2025-03-31 15:30:16.092 +05:30 [INF]                   - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]               - Volo.Abp.Threading.AbpThreadingModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Json.AbpJsonAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Timing.AbpTimingModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2025-03-31 15:30:16.092 +05:30 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.Users.AbpUsersDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.OpenIddict.AbpOpenIddictDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.BlobStoring.Database.BlobStoringDatabaseDomainSharedModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.Application.AbpDddApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.Auditing.AbpAuditingContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.Json.AbpJsonModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.SettingManagement.AbpSettingManagementApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.Users.AbpUsersAbstractionModule
2025-03-31 15:30:16.092 +05:30 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2025-03-31 15:30:16.092 +05:30 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.Authorization.AbpAuthorizationModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.Account.AbpAccountApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2025-03-31 15:30:16.092 +05:30 [INF]     - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2025-03-31 15:30:16.092 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2025-03-31 15:30:16.092 +05:30 [INF]         - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2025-03-31 15:30:16.094 +05:30 [INF]           - Volo.Abp.Auditing.AbpAuditingModule
2025-03-31 15:30:16.094 +05:30 [INF]           - Volo.Abp.Http.AbpHttpModule
2025-03-31 15:30:16.094 +05:30 [INF]             - Volo.Abp.Http.AbpHttpAbstractionsModule
2025-03-31 15:30:16.094 +05:30 [INF]             - Volo.Abp.Minify.AbpMinifyModule
2025-03-31 15:30:16.094 +05:30 [INF]           - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2025-03-31 15:30:16.094 +05:30 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreAbstractionsModule
2025-03-31 15:30:16.094 +05:30 [INF]         - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2025-03-31 15:30:16.094 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2025-03-31 15:30:16.094 +05:30 [INF]         - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2025-03-31 15:30:16.094 +05:30 [INF]           - Volo.Abp.UI.AbpUiModule
2025-03-31 15:30:16.094 +05:30 [INF]         - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2025-03-31 15:30:16.098 +05:30 [INF]           - Volo.Abp.Domain.AbpDddDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2025-03-31 15:30:16.098 +05:30 [INF]             - Volo.Abp.Specifications.AbpSpecificationsModule
2025-03-31 15:30:16.098 +05:30 [INF]             - Volo.Abp.Caching.AbpCachingModule
2025-03-31 15:30:16.098 +05:30 [INF]               - Volo.Abp.Serialization.AbpSerializationModule
2025-03-31 15:30:16.098 +05:30 [INF]             - Volo.Abp.Domain.AbpDddDomainSharedModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.SettingManagement.AbpSettingManagementHttpApiModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.Account.AbpAccountHttpApiModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityHttpApiModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2025-03-31 15:30:16.098 +05:30 [INF]   - Volo.Abp.Studio.Client.AspNetCore.AbpStudioClientAspNetCoreModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.Studio.AbpStudioClientModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.Studio.AbpStudioClientContractsModule
2025-03-31 15:30:16.098 +05:30 [INF]   - Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.AbpAspNetCoreMvcUiLeptonXLiteThemeModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingAbstractionsModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.AutoMapper.AbpAutoMapperModule
2025-03-31 15:30:16.098 +05:30 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2025-03-31 15:30:16.098 +05:30 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2025-03-31 15:30:16.098 +05:30 [INF]   - SkillMatrixManagement.SkillMatrixManagementApplicationModule
2025-03-31 15:30:16.098 +05:30 [INF]     - SkillMatrixManagement.SkillMatrixManagementDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2025-03-31 15:30:16.098 +05:30 [INF]           - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2025-03-31 15:30:16.098 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.PermissionManagement.OpenIddict.AbpPermissionManagementDomainOpenIddictModule
2025-03-31 15:30:16.098 +05:30 [INF]       - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.Emailing.AbpEmailingModule
2025-03-31 15:30:16.099 +05:30 [INF]         - Volo.Abp.TextTemplating.AbpTextTemplatingModule
2025-03-31 15:30:16.099 +05:30 [INF]           - Volo.Abp.TextTemplating.Scriban.AbpTextTemplatingScribanModule
2025-03-31 15:30:16.099 +05:30 [INF]             - Volo.Abp.TextTemplating.AbpTextTemplatingCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]         - Volo.Abp.Users.AbpUsersDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.OpenIddict.AbpOpenIddictDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.BlobStoring.Database.BlobStoringDatabaseDomainModule
2025-03-31 15:30:16.099 +05:30 [INF]         - Volo.Abp.BlobStoring.AbpBlobStoringModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.Identity.AbpIdentityApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.Account.AbpAccountApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.SettingManagement.AbpSettingManagementApplicationModule
2025-03-31 15:30:16.099 +05:30 [INF]   - SkillMatrixManagement.EntityFrameworkCore.SkillMatrixManagementEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.EntityFrameworkCore.PostgreSql.AbpEntityFrameworkCorePostgreSqlModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.OpenIddict.EntityFrameworkCore.AbpOpenIddictEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.BlobStoring.Database.EntityFrameworkCore.BlobStoringDatabaseEntityFrameworkCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]   - Volo.Abp.Account.Web.AbpAccountWebOpenIddictModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.Account.Web.AbpAccountWebModule
2025-03-31 15:30:16.099 +05:30 [INF]       - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]     - Volo.Abp.OpenIddict.AbpOpenIddictAspNetCoreModule
2025-03-31 15:30:16.099 +05:30 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2025-03-31 15:30:16.099 +05:30 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2025-03-31 15:30:16.644 +05:30 [DBG] Started background worker: Volo.Abp.BackgroundJobs.BackgroundJobWorker
2025-03-31 15:30:16.903 +05:30 [DBG] Started background worker: Volo.Abp.OpenIddict.Tokens.TokenCleanupBackgroundWorker
2025-03-31 15:30:18.969 +05:30 [INF] User profile is available. Using 'C:\Users\admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-31 15:30:19.916 +05:30 [INF] Initialized all ABP modules.
2025-03-31 15:30:20.082 +05:30 [INF] Initializing UI Database
2025-03-31 15:30:22.164 +05:30 [INF] Saving healthchecks configuration to database
2025-03-31 15:30:23.737 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:30:23.895 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:30:23.911 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:30:23.953 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-03-31 15:30:23.953 +05:30 [INF] Hosting environment: Development
2025-03-31 15:30:23.953 +05:30 [INF] Content root path: C:\Users\admin\Desktop\Project\skill-matrix-management\SkillMatrixManagement\src\SkillMatrixManagement.HttpApi.Host
2025-03-31 15:30:24.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/ - null null
2025-03-31 15:30:26.497 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:30:27.971 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:27.971 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:28.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:28.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:28.017 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:28.017 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:28.025 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:28.025 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:28.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:28.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:28.073 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:28.077 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:30:28.084 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:30:28.091 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:30:28.101 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:30:28.107 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:30:28.107 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:30:28.109 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:30:29.789 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:30:31.165 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:31.181 +05:30 [DBG] Filling dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:36.303 +05:30 [INF] Executing endpoint '/Index'
2025-03-31 15:30:36.438 +05:30 [INF] Route matched with {page = "/Index", area = "", action = "", controller = ""}. Executing page /Index
2025-03-31 15:30:36.446 +05:30 [INF] Skipping the execution of current filter as its not the most effective filter implementing the policy Microsoft.AspNetCore.Mvc.ViewFeatures.IAntiforgeryPolicy
2025-03-31 15:30:37.088 +05:30 [INF] Executing handler method SkillMatrixManagement.Pages.IndexModel.OnGetAsync - ModelState is "Valid"
2025-03-31 15:30:37.803 +05:30 [INF] Executed handler method OnGetAsync, returned result .
2025-03-31 15:30:37.815 +05:30 [INF] Executing an implicit handler method - ModelState is "Valid"
2025-03-31 15:30:37.815 +05:30 [INF] Executed an implicit handler method, returned result Microsoft.AspNetCore.Mvc.RazorPages.PageResult.
2025-03-31 15:30:39.789 +05:30 [DBG] Added bundle 'LeptonXLite.Global' to the page in 147.22 ms.
2025-03-31 15:30:39.992 +05:30 [DBG] Added bundle 'LeptonXLite.Global' to the page in 70.38 ms.
2025-03-31 15:30:40.117 +05:30 [INF] Executed page /Index in 3654.6427ms
2025-03-31 15:30:40.121 +05:30 [INF] Executed endpoint '/Index'
2025-03-31 15:30:40.995 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ApplicationConfigurationScript - null null
2025-03-31 15:30:40.997 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ServiceProxyScript - null null
2025-03-31 15:30:41.001 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.001 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:41.002 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:41.021 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:41.035 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:41.074 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:41.076 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:41.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ApplicationLocalizationScript?cultureName=en - null null
2025-03-31 15:30:41.130 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.130 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:41.130 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:41.130 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:41.131 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:41.144 +05:30 [INF] Route matched with {area = "Abp", action = "Get", controller = "AbpApplicationConfigurationScript", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Get() on controller Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 15:30:41.148 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:41.150 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:41.161 +05:30 [INF] Route matched with {area = "Abp", action = "Get", controller = "AbpApplicationLocalizationScript", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetAsync(Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto) on controller Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 15:30:41.170 +05:30 [INF] Route matched with {area = "Abp", action = "GetAll", controller = "AbpServiceProxyScript", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetAll(Volo.Abp.AspNetCore.Mvc.ProxyScripting.ServiceProxyGenerationModel) on controller Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 15:30:41.372 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - null null
2025-03-31 15:30:41.380 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - 200 16553 application/javascript; charset=utf-8 5.7732ms
2025-03-31 15:30:41.382 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_vs/browserLink - null null
2025-03-31 15:30:41.454 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/ - 200 null text/html; charset=utf-8 17238.3642ms
2025-03-31 15:30:41.662 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.RegisterAsyncByInput
2025-03-31 15:30:41.666 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_vs/browserLink - 200 null text/javascript; charset=UTF-8 284.4373ms
2025-03-31 15:30:41.745 +05:30 [DBG] Executing AbpApplicationConfigurationAppService.GetAsync()...
2025-03-31 15:30:41.762 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.SendPasswordResetCodeAsyncByInput
2025-03-31 15:30:41.762 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.VerifyPasswordResetTokenAsyncByInput
2025-03-31 15:30:41.762 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.ResetPasswordAsyncByInput
2025-03-31 15:30:41.764 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.LoginByLogin
2025-03-31 15:30:41.764 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.Logout
2025-03-31 15:30:41.765 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.CheckPasswordByLogin
2025-03-31 15:30:41.766 +05:30 [DBG] ActionApiDescriptionModel.Create: DynamicClaims.RefreshAsync
2025-03-31 15:30:41.766 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.GetAsync
2025-03-31 15:30:41.766 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.UpdateAsyncByInput
2025-03-31 15:30:41.767 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.ChangePasswordAsyncByInput
2025-03-31 15:30:41.767 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpTenant.FindTenantByNameAsyncByName
2025-03-31 15:30:41.768 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpTenant.FindTenantByIdAsyncById
2025-03-31 15:30:41.770 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetAllListAsync
2025-03-31 15:30:41.770 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetListAsyncByInput
2025-03-31 15:30:41.772 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetAsyncById
2025-03-31 15:30:41.772 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.CreateAsyncByInput
2025-03-31 15:30:41.773 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.773 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.DeleteAsyncById
2025-03-31 15:30:41.773 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetAsyncById
2025-03-31 15:30:41.774 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetListAsyncByInput
2025-03-31 15:30:41.774 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.CreateAsyncByInput
2025-03-31 15:30:41.775 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.775 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.DeleteAsyncById
2025-03-31 15:30:41.775 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetRolesAsyncById
2025-03-31 15:30:41.775 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetAssignableRolesAsync
2025-03-31 15:30:41.776 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.UpdateRolesAsyncByIdAndInput
2025-03-31 15:30:41.776 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.FindByUsernameAsyncByUserName
2025-03-31 15:30:41.776 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.FindByEmailAsyncByEmail
2025-03-31 15:30:41.777 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.FindByIdAsyncById
2025-03-31 15:30:41.777 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.FindByUserNameAsyncByUserName
2025-03-31 15:30:41.777 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.SearchAsyncByInput
2025-03-31 15:30:41.778 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.GetCountAsyncByInput
2025-03-31 15:30:41.778 +05:30 [DBG] ActionApiDescriptionModel.Create: Permissions.GetAsyncByProviderNameAndProviderKey
2025-03-31 15:30:41.779 +05:30 [DBG] ActionApiDescriptionModel.Create: Permissions.UpdateAsyncByProviderNameAndProviderKeyAndInput
2025-03-31 15:30:41.779 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.GetAsync
2025-03-31 15:30:41.779 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.UpdateAsyncByInput
2025-03-31 15:30:41.779 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.SendTestEmailAsyncByInput
2025-03-31 15:30:41.780 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.GetAsync
2025-03-31 15:30:41.780 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.GetTimezonesAsync
2025-03-31 15:30:41.780 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.UpdateAsyncByTimezone
2025-03-31 15:30:41.781 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetAsyncById
2025-03-31 15:30:41.781 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetListAsyncByInput
2025-03-31 15:30:41.781 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.CreateAsyncByInput
2025-03-31 15:30:41.782 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.782 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.DeleteAsyncById
2025-03-31 15:30:41.783 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetDefaultConnectionStringAsyncById
2025-03-31 15:30:41.783 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString
2025-03-31 15:30:41.783 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.DeleteDefaultConnectionStringAsyncById
2025-03-31 15:30:41.784 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.GetAsyncByProviderNameAndProviderKey
2025-03-31 15:30:41.784 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.UpdateAsyncByProviderNameAndProviderKeyAndInput
2025-03-31 15:30:41.785 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.DeleteAsyncByProviderNameAndProviderKey
2025-03-31 15:30:41.785 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApplicationConfiguration.GetAsyncByOptions
2025-03-31 15:30:41.785 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApplicationLocalization.GetAsyncByInput
2025-03-31 15:30:41.795 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApiDefinition.GetByModel
2025-03-31 15:30:41.796 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.CreateAsyncByInput
2025-03-31 15:30:41.798 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetByIdAsyncById
2025-03-31 15:30:41.798 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetcategoryNameAsyncByCategoryName
2025-03-31 15:30:41.798 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetPagedListAsyncByInput
2025-03-31 15:30:41.798 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.DeleteAsyncById
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.PermanentDeleteAsyncById
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.RestoreCategoryAsyncById
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetLookupAsync
2025-03-31 15:30:41.799 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetByCategoryNameAsyncByCategoryName
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.CreateAsyncByInput
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.DeleteAsyncById
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.800 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetByIdAsyncById
2025-03-31 15:30:41.802 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetLookupAsync
2025-03-31 15:30:41.802 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetPagedListAsyncByInput
2025-03-31 15:30:41.802 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.PermanentDeleteAsyncById
2025-03-31 15:30:41.802 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.RestoreDepartmentInternalRoleAsyncById
2025-03-31 15:30:41.803 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.803 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.804 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.CreateAsyncByInput
2025-03-31 15:30:41.804 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.DeleteAsyncById
2025-03-31 15:30:41.804 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.804 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetByIdAsyncById
2025-03-31 15:30:41.805 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetLookupAsync
2025-03-31 15:30:41.805 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetPagedListAsyncByInput
2025-03-31 15:30:41.805 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.PermanentDeleteAsyncById
2025-03-31 15:30:41.805 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.RestoreDepartmentAsyncById
2025-03-31 15:30:41.806 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.807 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.807 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.CreateAsyncByInput
2025-03-31 15:30:41.807 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.DeleteAsyncById
2025-03-31 15:30:41.807 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.807 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetByIdAsyncById
2025-03-31 15:30:41.808 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetLookupAsync
2025-03-31 15:30:41.808 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetPagedListAsyncByInput
2025-03-31 15:30:41.809 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.PermanentDeleteAsyncById
2025-03-31 15:30:41.809 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.RestoreEmployeeSkillAsyncById
2025-03-31 15:30:41.809 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.809 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.810 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.CreateAsyncByInput
2025-03-31 15:30:41.810 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.DeleteAsyncById
2025-03-31 15:30:41.810 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.811 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetByIdAsyncById
2025-03-31 15:30:41.811 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetLookupAsync
2025-03-31 15:30:41.811 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetPagedListAsyncByInput
2025-03-31 15:30:41.811 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.PermanentDeleteAsyncById
2025-03-31 15:30:41.811 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.RestoreRoleAsyncById
2025-03-31 15:30:41.812 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.813 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.813 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.CreateAsyncByInput
2025-03-31 15:30:41.813 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.DeleteAsyncById
2025-03-31 15:30:41.813 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.813 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetByIdAsyncById
2025-03-31 15:30:41.814 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetLookupAsync
2025-03-31 15:30:41.814 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetPagedListAsyncByInput
2025-03-31 15:30:41.814 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.PermanentDeleteAsyncById
2025-03-31 15:30:41.815 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.RestoreSkillSubtopicAsyncById
2025-03-31 15:30:41.815 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.815 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CountAsyncByIncludeDeleted
2025-03-31 15:30:41.816 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CreateAsyncByInput
2025-03-31 15:30:41.816 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.DeleteAsyncById
2025-03-31 15:30:41.816 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetAllAsyncByIncludeDeleted
2025-03-31 15:30:41.817 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetByIdAsyncById
2025-03-31 15:30:41.818 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetLookupAsync
2025-03-31 15:30:41.818 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetPagedListAsyncByInput
2025-03-31 15:30:41.819 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.PermanentDeleteAsyncById
2025-03-31 15:30:41.819 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.RestoreUserAsyncById
2025-03-31 15:30:41.820 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.UpdateAsyncByIdAndInput
2025-03-31 15:30:41.821 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetUserNameAndEmailByUserNameOrEmailByUserNameOrEmail
2025-03-31 15:30:41.822 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CreateOrUpdateUserAsyncByInput
2025-03-31 15:30:41.823 +05:30 [DBG] ActionApiDescriptionModel.Create: AppAiRecommendation.GetSkillRecommendationByUserId
2025-03-31 15:30:42.016 +05:30 [INF] Executing ContentResult with HTTP Response ContentType of application/javascript
2025-03-31 15:30:42.022 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc) in 850.3166ms
2025-03-31 15:30:42.022 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:42.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ServiceProxyScript - 200 41815 application/javascript 1123.5009ms
2025-03-31 15:30:42.213 +05:30 [INF] Executing ContentResult with HTTP Response ContentType of application/javascript
2025-03-31 15:30:42.214 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc) in 1052.7864ms
2025-03-31 15:30:42.214 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:42.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ApplicationLocalizationScript?cultureName=en - 200 40054 application/javascript 1107.1193ms
2025-03-31 15:30:42.685 +05:30 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:FeatureManagement.ManageHostFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing.Test,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.TimeZone,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update.ManageRoles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:42.734 +05:30 [DBG] Not found in the cache: pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:FeatureManagement.ManageHostFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing.Test,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.TimeZone,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update.ManageRoles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:42.782 +05:30 [DBG] Getting not cache granted permissions from the repository for this provider name,key: U,3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:43.127 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:30:43.129 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 16653.4596ms
2025-03-31 15:30:43.144 +05:30 [INF] Received HTTP response headers after 19222.8894ms - 200
2025-03-31 15:30:43.147 +05:30 [INF] End processing HTTP request after 19283.6601ms - 200
2025-03-31 15:30:43.186 +05:30 [DBG] Setting the cache items. Count: 21
2025-03-31 15:30:43.204 +05:30 [DBG] Finished setting the cache items. Count: 21
2025-03-31 15:30:43.294 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/swagger/index.html - null null
2025-03-31 15:30:43.330 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:43.330 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:43.330 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:43.330 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:43.330 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:43.335 +05:30 [DBG] PermissionStore.GetCacheItemAsync: pn:R,pk:admin,n:FeatureManagement.ManageHostFeatures,pn:R,pk:admin,n:SettingManagement.Emailing,pn:R,pk:admin,n:SettingManagement.Emailing.Test,pn:R,pk:admin,n:SettingManagement.TimeZone,pn:R,pk:admin,n:AbpIdentity.Roles,pn:R,pk:admin,n:AbpIdentity.Roles.Create,pn:R,pk:admin,n:AbpIdentity.Roles.Update,pn:R,pk:admin,n:AbpIdentity.Roles.Delete,pn:R,pk:admin,n:AbpIdentity.Roles.ManagePermissions,pn:R,pk:admin,n:AbpIdentity.Users,pn:R,pk:admin,n:AbpIdentity.Users.Create,pn:R,pk:admin,n:AbpIdentity.Users.Update,pn:R,pk:admin,n:AbpIdentity.Users.Update.ManageRoles,pn:R,pk:admin,n:AbpIdentity.Users.Delete,pn:R,pk:admin,n:AbpIdentity.Users.ManagePermissions,pn:R,pk:admin,n:AbpTenantManagement.Tenants,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Create,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Update,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Delete,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageFeatures,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:43.335 +05:30 [DBG] Not found in the cache: pn:R,pk:admin,n:FeatureManagement.ManageHostFeatures,pn:R,pk:admin,n:SettingManagement.Emailing,pn:R,pk:admin,n:SettingManagement.Emailing.Test,pn:R,pk:admin,n:SettingManagement.TimeZone,pn:R,pk:admin,n:AbpIdentity.Roles,pn:R,pk:admin,n:AbpIdentity.Roles.Create,pn:R,pk:admin,n:AbpIdentity.Roles.Update,pn:R,pk:admin,n:AbpIdentity.Roles.Delete,pn:R,pk:admin,n:AbpIdentity.Roles.ManagePermissions,pn:R,pk:admin,n:AbpIdentity.Users,pn:R,pk:admin,n:AbpIdentity.Users.Create,pn:R,pk:admin,n:AbpIdentity.Users.Update,pn:R,pk:admin,n:AbpIdentity.Users.Update.ManageRoles,pn:R,pk:admin,n:AbpIdentity.Users.Delete,pn:R,pk:admin,n:AbpIdentity.Users.ManagePermissions,pn:R,pk:admin,n:AbpTenantManagement.Tenants,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Create,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Update,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Delete,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageFeatures,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:43.336 +05:30 [DBG] Getting not cache granted permissions from the repository for this provider name,key: R,admin
2025-03-31 15:30:43.349 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:43.480 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:30:43.481 +05:30 [DBG] Creating a new HealthReport history.
2025-03-31 15:30:43.902 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:30:43.904 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:30:43.924 +05:30 [ERR] ---------- RemoteServiceErrorInfo ----------
{
  "code": null,
  "message": "An internal error occurred during your request!",
  "details": null,
  "data": null,
  "validationErrors": null
}

2025-03-31 15:30:43.926 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/swagger/index.html - 200 null text/html;charset=utf-8 631.488ms
2025-03-31 15:30:43.994 +05:30 [ERR] The operation was canceled.
System.OperationCanceledException: The operation was canceled.
   at System.Threading.CancellationToken.ThrowOperationCanceledException()
   at System.Threading.CancellationToken.ThrowIfCancellationRequested()
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Volo.Abp.PermissionManagement.EntityFrameworkCore.EfCorePermissionGrantRepository.GetListAsync(String[] names, String providerName, String providerKey, CancellationToken cancellationToken)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.PermissionManagement.PermissionStore.SetCacheItemsAsync(String providerName, String providerKey, List`1 notCacheKeys)
   at Volo.Abp.PermissionManagement.PermissionStore.GetCacheItemsAsync(String[] names, String providerName, String providerKey)
   at Volo.Abp.PermissionManagement.PermissionStore.IsGrantedAsync(String[] names, String providerName, String providerKey)
   at Volo.Abp.Authorization.Permissions.RolePermissionValueProvider.CheckAsync(PermissionValuesCheckContext context)
   at Volo.Abp.Authorization.Permissions.PermissionChecker.IsGrantedAsync(ClaimsPrincipal claimsPrincipal, String[] names)
   at Volo.Abp.Authorization.Permissions.PermissionChecker.IsGrantedAsync(String[] names)
   at Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService.GetAuthConfigAsync()
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.GlobalFeatures.GlobalFeatureInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService.GetAsync(ApplicationConfigurationRequestOptions options)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.GlobalFeatures.GlobalFeatureInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.ProceedByLoggingAsync(IAbpMethodInvocation invocation, AbpAuditingOptions options, IAuditingHelper auditingHelper, IAuditLogScope auditLogScope)
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get()
   at lambda_method4428(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2025-03-31 15:30:44.049 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - null null
2025-03-31 15:30:44.051 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - 200 16553 application/javascript; charset=utf-8 1.6855ms
2025-03-31 15:30:44.051 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/swagger/index.js - null null
2025-03-31 15:30:44.051 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc) in 2907.746ms
2025-03-31 15:30:44.063 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:44.063 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:44.063 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:44.063 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:44.063 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:44.074 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:44.097 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:44.102 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/swagger/index.js - 200 null application/javascript;charset=utf-8 50.1629ms
2025-03-31 15:30:44.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_vs/browserLink - null null
2025-03-31 15:30:44.196 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_vs/browserLink - 200 null text/javascript; charset=UTF-8 94.3651ms
2025-03-31 15:30:44.304 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/swagger/v1/swagger.json - null null
2025-03-31 15:30:44.306 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:44.306 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:44.306 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:44.306 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:44.306 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:44.321 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:45.671 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1367.7272ms
2025-03-31 15:30:45.691 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/abp/application-configuration - null null
2025-03-31 15:30:45.693 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:45.693 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:45.693 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:45.693 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:45.693 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:45.720 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:45.747 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:45.765 +05:30 [INF] Route matched with {area = "abp", action = "Get", controller = "AbpApplicationConfiguration", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto] GetAsync(Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions) on controller Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 15:30:45.863 +05:30 [DBG] Executing AbpApplicationConfigurationAppService.GetAsync()...
2025-03-31 15:30:45.867 +05:30 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:FeatureManagement.ManageHostFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing.Test,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.TimeZone,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update.ManageRoles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:45.874 +05:30 [DBG] Found in the cache: pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:FeatureManagement.ManageHostFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.Emailing.Test,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:SettingManagement.TimeZone,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Roles.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Update.ManageRoles,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpIdentity.Users.ManagePermissions,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Create,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Update,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.Delete,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageFeatures,pn:U,pk:3a18c157-1dd6-53ba-6c14-17093f28901e,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:45.876 +05:30 [DBG] PermissionStore.GetCacheItemAsync: pn:R,pk:admin,n:FeatureManagement.ManageHostFeatures,pn:R,pk:admin,n:SettingManagement.Emailing,pn:R,pk:admin,n:SettingManagement.Emailing.Test,pn:R,pk:admin,n:SettingManagement.TimeZone,pn:R,pk:admin,n:AbpIdentity.Roles,pn:R,pk:admin,n:AbpIdentity.Roles.Create,pn:R,pk:admin,n:AbpIdentity.Roles.Update,pn:R,pk:admin,n:AbpIdentity.Roles.Delete,pn:R,pk:admin,n:AbpIdentity.Roles.ManagePermissions,pn:R,pk:admin,n:AbpIdentity.Users,pn:R,pk:admin,n:AbpIdentity.Users.Create,pn:R,pk:admin,n:AbpIdentity.Users.Update,pn:R,pk:admin,n:AbpIdentity.Users.Update.ManageRoles,pn:R,pk:admin,n:AbpIdentity.Users.Delete,pn:R,pk:admin,n:AbpIdentity.Users.ManagePermissions,pn:R,pk:admin,n:AbpTenantManagement.Tenants,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Create,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Update,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Delete,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageFeatures,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:45.876 +05:30 [DBG] Not found in the cache: pn:R,pk:admin,n:FeatureManagement.ManageHostFeatures,pn:R,pk:admin,n:SettingManagement.Emailing,pn:R,pk:admin,n:SettingManagement.Emailing.Test,pn:R,pk:admin,n:SettingManagement.TimeZone,pn:R,pk:admin,n:AbpIdentity.Roles,pn:R,pk:admin,n:AbpIdentity.Roles.Create,pn:R,pk:admin,n:AbpIdentity.Roles.Update,pn:R,pk:admin,n:AbpIdentity.Roles.Delete,pn:R,pk:admin,n:AbpIdentity.Roles.ManagePermissions,pn:R,pk:admin,n:AbpIdentity.Users,pn:R,pk:admin,n:AbpIdentity.Users.Create,pn:R,pk:admin,n:AbpIdentity.Users.Update,pn:R,pk:admin,n:AbpIdentity.Users.Update.ManageRoles,pn:R,pk:admin,n:AbpIdentity.Users.Delete,pn:R,pk:admin,n:AbpIdentity.Users.ManagePermissions,pn:R,pk:admin,n:AbpTenantManagement.Tenants,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Create,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Update,pn:R,pk:admin,n:AbpTenantManagement.Tenants.Delete,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageFeatures,pn:R,pk:admin,n:AbpTenantManagement.Tenants.ManageConnectionStrings
2025-03-31 15:30:45.879 +05:30 [DBG] Getting not cache granted permissions from the repository for this provider name,key: R,admin
2025-03-31 15:30:45.962 +05:30 [DBG] Setting the cache items. Count: 21
2025-03-31 15:30:45.962 +05:30 [DBG] Finished setting the cache items. Count: 21
2025-03-31 15:30:47.249 +05:30 [DBG] Executed AbpApplicationConfigurationAppService.GetAsync().
2025-03-31 15:30:47.327 +05:30 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto'.
2025-03-31 15:30:47.663 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc) in 1897.4419ms
2025-03-31 15:30:47.663 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 15:30:47.687 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/abp/application-configuration - 200 null application/json; charset=utf-8 1996.6245ms
2025-03-31 15:30:48.930 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/abp/Swashbuckle/SetCsrfCookie - null null
2025-03-31 15:30:48.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:48.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:48.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:48.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:48.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:48.977 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ApplicationConfigurationScript - 499 null null 7983.6973ms
2025-03-31 15:30:48.990 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:30:48.992 +05:30 [INF] Executing endpoint 'Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle)'
2025-03-31 15:30:48.997 +05:30 [INF] Route matched with {area = "Abp", action = "SetCsrfCookie", controller = "AbpSwashbuckle", page = ""}. Executing controller action with signature Void SetCsrfCookie() on controller Volo.Abp.Swashbuckle.AbpSwashbuckleController (Volo.Abp.Swashbuckle).
2025-03-31 15:30:49.009 +05:30 [INF] Executed action Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle) in 11.7795ms
2025-03-31 15:30:49.009 +05:30 [INF] Executed endpoint 'Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle)'
2025-03-31 15:30:49.013 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/abp/Swashbuckle/SetCsrfCookie - 204 null null 124.6543ms
2025-03-31 15:30:49.039 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/.well-known/openid-configuration - null null
2025-03-31 15:30:49.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:49.041 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:49.042 +05:30 [INF] The request URI matched a server endpoint: "Configuration".
2025-03-31 15:30:49.042 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:49.042 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:49.042 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:49.057 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ExtractConfigurationRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ExtractGetRequest`1[[OpenIddict.Server.OpenIddictServerEvents+ExtractConfigurationRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.066 +05:30 [INF] The configuration request was successfully extracted: {}.
2025-03-31 15:30:49.069 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ExtractConfigurationRequest.
2025-03-31 15:30:49.074 +05:30 [INF] The configuration request was successfully validated.
2025-03-31 15:30:49.074 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ValidateConfigurationRequest.
2025-03-31 15:30:49.085 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachIssuer.
2025-03-31 15:30:49.095 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachEndpoints.
2025-03-31 15:30:49.097 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachGrantTypes.
2025-03-31 15:30:49.099 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachResponseTypes.
2025-03-31 15:30:49.106 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachResponseModes.
2025-03-31 15:30:49.109 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachClientAuthenticationMethods.
2025-03-31 15:30:49.112 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachCodeChallengeMethods.
2025-03-31 15:30:49.114 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachScopes.
2025-03-31 15:30:49.882 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by Volo.Abp.OpenIddict.Scopes.AttachScopes.
2025-03-31 15:30:49.885 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachClaims.
2025-03-31 15:30:49.888 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachSubjectTypes.
2025-03-31 15:30:49.890 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachPromptValues.
2025-03-31 15:30:49.893 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachSigningAlgorithms.
2025-03-31 15:30:49.902 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachAdditionalMetadata.
2025-03-31 15:30:49.919 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+HandleConfigurationRequest.
2025-03-31 15:30:49.939 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+AttachHttpResponseCode`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.942 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+AttachWwwAuthenticateHeader`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.950 +05:30 [INF] The response was successfully returned as a JSON document: {
  "issuer": "https://localhost:44302/",
  "authorization_endpoint": "https://localhost:44302/connect/authorize",
  "token_endpoint": "https://localhost:44302/connect/token",
  "introspection_endpoint": "https://localhost:44302/connect/introspect",
  "end_session_endpoint": "https://localhost:44302/connect/endsession",
  "revocation_endpoint": "https://localhost:44302/connect/revocat",
  "userinfo_endpoint": "https://localhost:44302/connect/userinfo",
  "device_authorization_endpoint": "https://localhost:44302/device",
  "jwks_uri": "https://localhost:44302/.well-known/jwks",
  "grant_types_supported": [
    "authorization_code",
    "implicit",
    "password",
    "client_credentials",
    "refresh_token",
    "urn:ietf:params:oauth:grant-type:device_code"
  ],
  "response_types_supported": [
    "code",
    "code id_token",
    "code id_token token",
    "code token",
    "id_token",
    "id_token token",
    "token",
    "none"
  ],
  "response_modes_supported": [
    "query",
    "form_post",
    "fragment"
  ],
  "scopes_supported": [
    "openid",
    "offline_access",
    "email",
    "profile",
    "phone",
    "roles",
    "address",
    "SkillMatrixManagement"
  ],
  "claims_supported": [
    "aud",
    "exp",
    "iat",
    "iss",
    "sub"
  ],
  "id_token_signing_alg_values_supported": [
    "RS256"
  ],
  "code_challenge_methods_supported": [
    "plain",
    "S256"
  ],
  "subject_types_supported": [
    "public"
  ],
  "prompt_values_supported": [
    "consent",
    "login",
    "none",
    "select_account"
  ],
  "token_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "introspection_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "revocation_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "device_authorization_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "claims_parameter_supported": false,
  "request_parameter_supported": false,
  "request_uri_parameter_supported": false,
  "tls_client_certificate_bound_access_tokens": false,
  "authorization_response_iss_parameter_supported": true
}.
2025-03-31 15:30:49.971 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ProcessJsonResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.972 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was marked as handled by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ProcessJsonResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.975 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ApplyConfigurationResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.975 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was marked as handled by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ApplyConfigurationResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 15:30:49.986 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/.well-known/openid-configuration - 200 2410 application/json;charset=UTF-8 947.4979ms
2025-03-31 15:30:54.296 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:30:54.624 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:30:54.624 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:30:54.638 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:30:54.641 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:54.642 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:30:54.642 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:30:54.642 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:30:54.642 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:54.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:30:54.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:30:54.645 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:30:54.647 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:30:54.648 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:30:54.648 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:30:54.648 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:30:54.648 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:30:54.654 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:30:54.681 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:30:54.684 +05:30 [INF] Received HTTP response headers after 59.6553ms - 200
2025-03-31 15:30:54.684 +05:30 [INF] End processing HTTP request after 59.8782ms - 200
2025-03-31 15:30:54.684 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 46.1342ms
2025-03-31 15:30:54.721 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:30:54.722 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:30:54.742 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:30:54.743 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:04.197 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fd41-f9d3-0702-4b83-b729bcd3ffa1 - null null
2025-03-31 15:31:04.204 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:04.204 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:04.204 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:04.204 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:04.204 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:04.220 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:31:04.225 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:31:04.259 +05:30 [INF] Route matched with {action = "GetSkillRecommendation", controller = "AppAiRecommendation", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto]] GetSkillRecommendation(System.Guid) on controller SkillMatrixManagement.AiServices.AppAiRecommendationService (SkillMatrixManagement.Application).
2025-03-31 15:31:04.818 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:04.855 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:04.855 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:04.886 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:04.887 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:04.888 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:04.888 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:04.909 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:05.038 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:05.043 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 156.9699ms
2025-03-31 15:31:05.043 +05:30 [INF] Received HTTP response headers after 188.266ms - 200
2025-03-31 15:31:05.043 +05:30 [INF] End processing HTTP request after 188.4377ms - 200
2025-03-31 15:31:05.045 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:05.047 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:05.050 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:05.050 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:08.486 +05:30 [INF] Start processing HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:31:08.486 +05:30 [INF] Sending HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:31:11.011 +05:30 [INF] Received HTTP response headers after 2524.2401ms - 200
2025-03-31 15:31:11.011 +05:30 [INF] End processing HTTP request after 2525.3343ms - 200
2025-03-31 15:31:11.470 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-31 15:31:11.502 +05:30 [INF] Executed action SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application) in 7242.5299ms
2025-03-31 15:31:11.502 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:31:11.509 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fd41-f9d3-0702-4b83-b729bcd3ffa1 - 200 null application/json; charset=utf-8 7314.1412ms
2025-03-31 15:31:15.050 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:15.054 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:15.054 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:15.057 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:15.058 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:15.059 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:15.059 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:15.059 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:15.059 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:15.060 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:15.076 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:15.123 +05:30 [INF] Received HTTP response headers after 69.6137ms - 200
2025-03-31 15:31:15.124 +05:30 [INF] End processing HTTP request after 69.7945ms - 200
2025-03-31 15:31:15.125 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 67.968ms
2025-03-31 15:31:15.165 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:15.165 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:15.165 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:15.165 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:25.167 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:25.168 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:25.168 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:25.183 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:25.185 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:25.185 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:25.189 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:25.211 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:25.216 +05:30 [INF] Received HTTP response headers after 47.6346ms - 200
2025-03-31 15:31:25.216 +05:30 [INF] End processing HTTP request after 47.8104ms - 200
2025-03-31 15:31:25.217 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 33.9931ms
2025-03-31 15:31:25.222 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:25.222 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:25.222 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:25.222 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:35.223 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:35.225 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:35.225 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:35.228 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:35.229 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:35.230 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:35.231 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:35.246 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:35.248 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 19.7874ms
2025-03-31 15:31:35.248 +05:30 [INF] Received HTTP response headers after 23.2014ms - 200
2025-03-31 15:31:35.248 +05:30 [INF] End processing HTTP request after 23.3213ms - 200
2025-03-31 15:31:35.249 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:35.250 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:35.250 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:35.250 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:45.250 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:45.252 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:45.252 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:45.255 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:45.255 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:45.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:45.256 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:45.261 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:45.275 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:45.276 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 21.2491ms
2025-03-31 15:31:45.277 +05:30 [INF] Received HTTP response headers after 24.8082ms - 200
2025-03-31 15:31:45.277 +05:30 [INF] End processing HTTP request after 24.92ms - 200
2025-03-31 15:31:45.278 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:45.278 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:45.278 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:45.278 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:53.780 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 15:31:53.784 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:53.784 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:53.784 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:53.784 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:53.784 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:53.794 +05:30 [DBG] Get dynamic claims cache for user: 3a18c157-1dd6-53ba-6c14-17093f28901e
2025-03-31 15:31:53.796 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 15:31:53.808 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:31:55.382 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:31:55.383 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:55.383 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:31:55.389 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:31:55.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:55.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:31:55.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:31:55.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:31:55.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:55.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:31:55.391 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:31:55.393 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:31:55.450 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:31:55.451 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 61.8374ms
2025-03-31 15:31:55.454 +05:30 [INF] Received HTTP response headers after 71.1334ms - 200
2025-03-31 15:31:55.454 +05:30 [INF] End processing HTTP request after 71.2594ms - 200
2025-03-31 15:31:55.455 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:31:55.455 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:31:55.455 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:31:55.455 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:31:56.024 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:31:56.609 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 2801.3314ms
2025-03-31 15:31:56.610 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 15:31:56.621 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 2841.3184ms
2025-03-31 15:32:05.447 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:05.448 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:05.448 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:05.452 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:05.454 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:05.454 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:05.454 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:05.454 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:05.454 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:05.455 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:05.455 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:05.457 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:05.472 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:05.473 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 21.1079ms
2025-03-31 15:32:05.474 +05:30 [INF] Received HTTP response headers after 25.0967ms - 200
2025-03-31 15:32:05.474 +05:30 [INF] End processing HTTP request after 25.2171ms - 200
2025-03-31 15:32:05.474 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:05.475 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:05.475 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:05.475 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:32:15.476 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:15.477 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:15.477 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:15.488 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:15.489 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:15.490 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:15.490 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:15.490 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:15.490 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:15.491 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:15.506 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:15.506 +05:30 [INF] Received HTTP response headers after 29.0215ms - 200
2025-03-31 15:32:15.506 +05:30 [INF] End processing HTTP request after 29.1363ms - 200
2025-03-31 15:32:15.524 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 35.9053ms
2025-03-31 15:32:15.526 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:15.527 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:15.527 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:15.527 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:32:25.530 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:25.531 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:25.531 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:25.552 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:25.554 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:25.554 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:25.554 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:25.554 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:25.554 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:25.555 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:25.555 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:25.561 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:25.578 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:25.579 +05:30 [INF] Received HTTP response headers after 47.9064ms - 200
2025-03-31 15:32:25.579 +05:30 [INF] End processing HTTP request after 48.0177ms - 200
2025-03-31 15:32:25.580 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 28.2003ms
2025-03-31 15:32:25.583 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:25.584 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:25.584 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:25.584 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:32:35.583 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:35.585 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:35.585 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:35.588 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:35.589 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:35.589 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:35.589 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:35.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:35.590 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:35.592 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:35.599 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:35.599 +05:30 [INF] Received HTTP response headers after 13.7344ms - 200
2025-03-31 15:32:35.599 +05:30 [INF] End processing HTTP request after 13.8277ms - 200
2025-03-31 15:32:35.612 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 23.9575ms
2025-03-31 15:32:35.613 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:35.613 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:35.614 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:35.614 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:32:45.602 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:45.604 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:45.604 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:45.607 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:45.608 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:45.608 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:45.608 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:45.608 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:45.608 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:45.609 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:45.610 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:45.611 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:45.629 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:45.630 +05:30 [INF] Received HTTP response headers after 25.6535ms - 200
2025-03-31 15:32:45.630 +05:30 [INF] End processing HTTP request after 25.7761ms - 200
2025-03-31 15:32:45.631 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:45.631 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 22.9361ms
2025-03-31 15:32:45.631 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:45.632 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:45.632 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:32:55.632 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:32:55.633 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:55.633 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:32:55.636 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:32:55.637 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:55.637 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:32:55.637 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:32:55.637 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:32:55.637 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:55.638 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:32:55.638 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:32:55.640 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:32:55.667 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:32:55.668 +05:30 [INF] Received HTTP response headers after 34.1778ms - 200
2025-03-31 15:32:55.668 +05:30 [INF] End processing HTTP request after 34.2886ms - 200
2025-03-31 15:32:55.668 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 32.3352ms
2025-03-31 15:32:55.672 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:32:55.673 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:32:55.673 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:32:55.673 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:05.679 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:05.680 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:05.680 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:05.683 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:05.684 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:05.684 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:05.684 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:05.684 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:05.684 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:05.685 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:05.685 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:05.688 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:05.698 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:05.699 +05:30 [INF] Received HTTP response headers after 19.095ms - 200
2025-03-31 15:33:05.699 +05:30 [INF] End processing HTTP request after 19.2075ms - 200
2025-03-31 15:33:05.700 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 15.8445ms
2025-03-31 15:33:05.702 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:05.703 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:05.704 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:05.704 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:15.705 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:15.706 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:15.706 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:15.711 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:15.712 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:15.712 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:15.714 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:15.728 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:15.729 +05:30 [INF] Received HTTP response headers after 22.0241ms - 200
2025-03-31 15:33:15.729 +05:30 [INF] End processing HTTP request after 22.1576ms - 200
2025-03-31 15:33:15.733 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 22.3855ms
2025-03-31 15:33:15.734 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:15.734 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:15.735 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:15.735 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:25.728 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:25.729 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:25.729 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:25.732 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:25.733 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:25.734 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:25.734 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:25.734 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:25.734 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:25.737 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:25.747 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:25.747 +05:30 [INF] Received HTTP response headers after 17.7922ms - 200
2025-03-31 15:33:25.747 +05:30 [INF] End processing HTTP request after 17.898ms - 200
2025-03-31 15:33:25.750 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 18.1913ms
2025-03-31 15:33:25.752 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:25.752 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:25.753 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:25.753 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:35.748 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:35.750 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:35.750 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:35.751 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:35.752 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:35.752 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:35.756 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:35.769 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:35.770 +05:30 [INF] Received HTTP response headers after 20.1513ms - 200
2025-03-31 15:33:35.770 +05:30 [INF] End processing HTTP request after 20.246ms - 200
2025-03-31 15:33:35.773 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 21.7763ms
2025-03-31 15:33:35.774 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:35.774 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:35.774 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:35.774 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:40.719 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:33:40.724 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:33:40.736 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:40.737 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.738 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:40.739 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:40.741 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:33:40.753 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:33:40.756 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:33:40.836 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:33:40.837 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:40.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:40.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:40.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.838 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:40.841 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:40.852 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:33:40.933 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:33:40.936 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.942 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.943 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:40.943 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:40.945 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:40.955 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:33:41.258 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.289 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 535.4614ms
2025-03-31 15:33:41.289 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.305 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 585.6586ms
2025-03-31 15:33:41.304 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.325 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.337 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 381.7547ms
2025-03-31 15:33:41.337 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 408.6174ms
2025-03-31 15:33:41.360 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 507.4975ms
2025-03-31 15:33:41.360 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.366 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 530.4347ms
2025-03-31 15:33:41.387 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:33:41.389 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.390 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.390 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:41.391 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.392 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:33:41.401 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.401 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 9.6197ms
2025-03-31 15:33:41.401 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.407 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 20.4304ms
2025-03-31 15:33:41.413 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:33:41.416 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:41.416 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.417 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.417 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:41.419 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.419 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:33:41.453 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:33:41.466 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.467 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:41.467 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:41.468 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.468 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:33:41.473 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.473 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 5.0878ms
2025-03-31 15:33:41.473 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.475 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 22.6397ms
2025-03-31 15:33:41.476 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:41.476 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 57.3982ms
2025-03-31 15:33:41.476 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:33:41.483 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 69.6595ms
2025-03-31 15:33:42.091 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:42.106 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 1350.1022ms
2025-03-31 15:33:42.107 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:33:42.112 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 1387.8957ms
2025-03-31 15:33:42.119 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:33:42.122 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:42.122 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:42.122 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:42.122 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:42.122 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:42.122 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:42.123 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:42.123 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:42.126 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:33:42.132 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:33:42.178 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:33:42.179 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 47.6434ms
2025-03-31 15:33:42.179 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:33:42.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 68.1233ms
2025-03-31 15:33:45.777 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:45.778 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:45.778 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:45.780 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:45.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:45.781 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:45.785 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:45.792 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:45.793 +05:30 [INF] Received HTTP response headers after 15.0998ms - 200
2025-03-31 15:33:45.793 +05:30 [INF] End processing HTTP request after 15.2137ms - 200
2025-03-31 15:33:45.796 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 16.2169ms
2025-03-31 15:33:45.797 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:45.797 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:45.798 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:45.798 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:33:49.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fdb1-b4c2-c582-51d5-ae3bce80514c - null null
2025-03-31 15:33:49.190 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:49.190 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:49.190 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:49.192 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:33:49.195 +05:30 [INF] Route matched with {action = "GetSkillRecommendation", controller = "AppAiRecommendation", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto]] GetSkillRecommendation(System.Guid) on controller SkillMatrixManagement.AiServices.AppAiRecommendationService (SkillMatrixManagement.Application).
2025-03-31 15:33:49.255 +05:30 [INF] Start processing HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:33:49.256 +05:30 [INF] Sending HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:33:50.708 +05:30 [INF] Received HTTP response headers after 1452.717ms - 200
2025-03-31 15:33:50.708 +05:30 [INF] End processing HTTP request after 1452.9639ms - 200
2025-03-31 15:33:50.712 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-31 15:33:50.712 +05:30 [INF] Executed action SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application) in 1517.5609ms
2025-03-31 15:33:50.712 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:33:50.720 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fdb1-b4c2-c582-51d5-ae3bce80514c - 200 null application/json; charset=utf-8 1532.9193ms
2025-03-31 15:33:55.801 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:33:55.803 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:55.803 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:33:55.808 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:33:55.808 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:55.809 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:33:55.810 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:33:55.812 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:33:55.822 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:33:55.823 +05:30 [INF] Received HTTP response headers after 19.7118ms - 200
2025-03-31 15:33:55.823 +05:30 [INF] End processing HTTP request after 19.8147ms - 200
2025-03-31 15:33:55.829 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 20.7912ms
2025-03-31 15:33:55.829 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:33:55.830 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:33:55.830 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:33:55.830 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:00.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fdb1-b4c2-c582-51d5-ae3bce80514c - null null
2025-03-31 15:34:00.205 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:34:00.205 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:00.205 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:00.206 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:00.206 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:00.210 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:34:00.210 +05:30 [INF] Route matched with {action = "GetSkillRecommendation", controller = "AppAiRecommendation", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto]] GetSkillRecommendation(System.Guid) on controller SkillMatrixManagement.AiServices.AppAiRecommendationService (SkillMatrixManagement.Application).
2025-03-31 15:34:00.255 +05:30 [INF] Start processing HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:34:00.255 +05:30 [INF] Sending HTTP request POST http://127.0.0.1:8000/recommend-skills
2025-03-31 15:34:01.538 +05:30 [INF] Received HTTP response headers after 1283.3192ms - 200
2025-03-31 15:34:01.538 +05:30 [INF] End processing HTTP request after 1283.5483ms - 200
2025-03-31 15:34:01.543 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[SkillMatrixManagement.DTOs.AiSkillRecommendationDTO.SkillRecommendationResponseDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-31 15:34:01.544 +05:30 [INF] Executed action SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application) in 1333.809ms
2025-03-31 15:34:01.544 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.AiServices.AppAiRecommendationService.GetSkillRecommendation (SkillMatrixManagement.Application)'
2025-03-31 15:34:01.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-ai-recommendation/skill-recommendation/3a18fdb1-b4c2-c582-51d5-ae3bce80514c - 200 null application/json; charset=utf-8 1346.8458ms
2025-03-31 15:34:05.832 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:05.834 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:05.834 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:05.837 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:05.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:05.838 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:05.838 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:05.842 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:05.860 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:05.860 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 23.3812ms
2025-03-31 15:34:05.861 +05:30 [INF] Received HTTP response headers after 27.3283ms - 200
2025-03-31 15:34:05.861 +05:30 [INF] End processing HTTP request after 27.4887ms - 200
2025-03-31 15:34:05.862 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:05.862 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:05.863 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:05.863 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:15.862 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:15.863 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:15.863 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:15.866 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:15.867 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:15.867 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:15.870 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:15.880 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:15.881 +05:30 [INF] Received HTTP response headers after 17.7793ms - 200
2025-03-31 15:34:15.881 +05:30 [INF] End processing HTTP request after 17.928ms - 200
2025-03-31 15:34:15.881 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 15.5717ms
2025-03-31 15:34:15.884 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:15.884 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:15.885 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:15.885 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:25.888 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:25.889 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:25.889 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:25.901 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:25.902 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:25.903 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:25.903 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:25.903 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:25.903 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:25.903 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:25.904 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:25.904 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:25.906 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:25.913 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:25.913 +05:30 [INF] Received HTTP response headers after 23.9064ms - 200
2025-03-31 15:34:25.913 +05:30 [INF] End processing HTTP request after 24.1705ms - 200
2025-03-31 15:34:25.916 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 14.5481ms
2025-03-31 15:34:25.917 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:25.917 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:25.917 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:25.917 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:35.916 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:35.917 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:35.917 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:35.927 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:35.927 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:35.928 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:35.928 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:35.929 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:35.947 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:35.948 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 21.2808ms
2025-03-31 15:34:35.949 +05:30 [INF] Received HTTP response headers after 31.4779ms - 200
2025-03-31 15:34:35.949 +05:30 [INF] End processing HTTP request after 31.5868ms - 200
2025-03-31 15:34:35.950 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:35.951 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:35.951 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:35.951 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:45.944 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:45.945 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:45.945 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:45.947 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:45.948 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:45.948 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:45.950 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:45.958 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:45.959 +05:30 [INF] Received HTTP response headers after 13.5079ms - 200
2025-03-31 15:34:45.959 +05:30 [INF] End processing HTTP request after 13.7482ms - 200
2025-03-31 15:34:45.960 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 13.8802ms
2025-03-31 15:34:45.994 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:45.994 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:45.994 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:45.994 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:34:56.003 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:34:56.004 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:56.004 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:34:56.006 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:34:56.007 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:56.007 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:34:56.007 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:34:56.007 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:34:56.007 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:56.008 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:34:56.008 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:34:56.012 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:34:56.023 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:34:56.024 +05:30 [INF] Received HTTP response headers after 19.8755ms - 200
2025-03-31 15:34:56.024 +05:30 [INF] End processing HTTP request after 20.002ms - 200
2025-03-31 15:34:56.025 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 18.6249ms
2025-03-31 15:34:56.029 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:34:56.030 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:34:56.030 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:34:56.030 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:05.933 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:35:05.934 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.934 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.934 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:05.936 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:05.936 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:35:05.936 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:35:05.937 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:05.937 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:05.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.938 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:05.939 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:05.939 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:35:05.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:35:05.951 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:05.951 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.951 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.952 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.952 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:05.953 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:05.953 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:35:05.993 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:35:05.993 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.994 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:05.994 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:05.995 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:35:05.997 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:35:06.000 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.001 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 64.3569ms
2025-03-31 15:35:06.001 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.005 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 72.3496ms
2025-03-31 15:35:06.025 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:35:06.025 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.026 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.026 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:06.028 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.028 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:35:06.160 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:06.160 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.160 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:06.160 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:06.161 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 221.9307ms
2025-03-31 15:35:06.161 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.171 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.171 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 143.044ms
2025-03-31 15:35:06.172 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.172 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 236.0668ms
2025-03-31 15:35:06.176 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 151.3638ms
2025-03-31 15:35:06.215 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.215 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 218.3967ms
2025-03-31 15:35:06.215 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.217 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.217 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 264.1262ms
2025-03-31 15:35:06.217 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.218 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 225.6804ms
2025-03-31 15:35:06.221 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:06.221 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 272.2043ms
2025-03-31 15:35:06.222 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.222 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.222 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:06.222 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:06.222 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.224 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.225 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.225 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:06.227 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:06.252 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:06.253 +05:30 [INF] Received HTTP response headers after 92.4244ms - 200
2025-03-31 15:35:06.253 +05:30 [INF] End processing HTTP request after 92.5602ms - 200
2025-03-31 15:35:06.254 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 32.7313ms
2025-03-31 15:35:06.255 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:35:06.256 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:06.256 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:06.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:06.256 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.256 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:06.256 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.257 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.257 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:06.257 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:06.257 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:06.259 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.260 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:35:06.261 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:35:06.262 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:06.262 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.262 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.262 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.263 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.263 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:06.266 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.266 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:35:06.269 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:35:06.270 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:06.270 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:06.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:06.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:06.271 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:06.272 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.272 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:35:06.282 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.282 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 9.6809ms
2025-03-31 15:35:06.282 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.285 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 16.1062ms
2025-03-31 15:35:06.313 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.314 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 54.1261ms
2025-03-31 15:35:06.314 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.324 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:35:06.324 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 57.8781ms
2025-03-31 15:35:06.324 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:35:06.324 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 69.189ms
2025-03-31 15:35:06.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 70.0188ms
2025-03-31 15:35:16.267 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:16.268 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:16.268 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:16.271 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:16.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:16.272 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:16.272 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:16.273 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:16.287 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:16.287 +05:30 [INF] Received HTTP response headers after 19.2293ms - 200
2025-03-31 15:35:16.288 +05:30 [INF] End processing HTTP request after 19.6227ms - 200
2025-03-31 15:35:16.289 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 17.9784ms
2025-03-31 15:35:16.291 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:16.292 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:16.292 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:16.292 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:26.282 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:26.284 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:26.284 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:26.287 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:26.288 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:26.288 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:26.289 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:26.378 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:26.379 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 92.1844ms
2025-03-31 15:35:26.379 +05:30 [INF] Received HTTP response headers after 95.4911ms - 200
2025-03-31 15:35:26.379 +05:30 [INF] End processing HTTP request after 95.584ms - 200
2025-03-31 15:35:26.380 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:26.380 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:26.381 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:26.381 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:36.385 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:36.386 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:36.386 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:36.388 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:36.388 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:36.388 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:36.388 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:36.389 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:36.389 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:36.391 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:36.401 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:36.401 +05:30 [INF] Received HTTP response headers after 15.5326ms - 200
2025-03-31 15:35:36.401 +05:30 [INF] End processing HTTP request after 15.6101ms - 200
2025-03-31 15:35:36.402 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 14.396ms
2025-03-31 15:35:36.406 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:36.406 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:36.406 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:36.406 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:46.416 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:46.418 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:46.418 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:46.441 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:46.442 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:46.443 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:46.443 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:46.443 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:46.444 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:46.459 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:46.460 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 18.2855ms
2025-03-31 15:35:46.460 +05:30 [INF] Received HTTP response headers after 42.6548ms - 200
2025-03-31 15:35:46.460 +05:30 [INF] End processing HTTP request after 42.7555ms - 200
2025-03-31 15:35:46.461 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:46.462 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:46.462 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:46.462 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:35:56.465 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:35:56.467 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:56.467 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:35:56.480 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:35:56.481 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:56.481 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:35:56.481 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:35:56.481 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:35:56.481 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:56.482 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:35:56.482 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:35:56.483 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:35:56.498 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:35:56.499 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 18.2623ms
2025-03-31 15:35:56.499 +05:30 [INF] Received HTTP response headers after 32.3816ms - 200
2025-03-31 15:35:56.499 +05:30 [INF] End processing HTTP request after 32.4719ms - 200
2025-03-31 15:35:56.500 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:35:56.500 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:35:56.500 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:35:56.500 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:06.492 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:06.493 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:06.493 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:06.495 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:06.495 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:06.496 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:06.496 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:06.499 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:06.507 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:06.507 +05:30 [INF] Received HTTP response headers after 13.9747ms - 200
2025-03-31 15:36:06.509 +05:30 [INF] End processing HTTP request after 15.379ms - 200
2025-03-31 15:36:06.513 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 17.8107ms
2025-03-31 15:36:06.514 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:06.514 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:06.514 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:06.514 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:13.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:13.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:13.023 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.023 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.023 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.024 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.024 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.025 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.025 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.087 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.089 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 65.4099ms
2025-03-31 15:36:13.089 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.106 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 84.7402ms
2025-03-31 15:36:13.125 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.125 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:13.126 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.126 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.126 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.128 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.128 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.145 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 119.2429ms
2025-03-31 15:36:13.145 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.151 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 128.978ms
2025-03-31 15:36:13.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:13.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:13.236 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.237 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.237 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.238 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.239 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.239 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:13.239 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.240 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.240 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.240 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.240 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.240 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.243 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.243 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.260 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.260 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 131.8341ms
2025-03-31 15:36:13.260 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.263 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 137.6622ms
2025-03-31 15:36:13.288 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.289 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 49.6525ms
2025-03-31 15:36:13.289 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.316 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 113.6256ms
2025-03-31 15:36:13.319 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.319 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 75.6317ms
2025-03-31 15:36:13.319 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.324 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 85.016ms
2025-03-31 15:36:13.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:13.328 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.328 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.328 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.328 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.329 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.329 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 88.88ms
2025-03-31 15:36:13.329 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.329 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.329 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.330 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.330 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.342 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 138.8696ms
2025-03-31 15:36:13.389 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:13.391 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:13.391 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.391 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:13.391 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:13.391 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.392 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:13.392 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:13.394 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.394 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:13.398 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.398 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 67.8421ms
2025-03-31 15:36:13.398 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.404 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 76.9746ms
2025-03-31 15:36:13.456 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:13.457 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 62.7408ms
2025-03-31 15:36:13.457 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:13.461 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 72.3623ms
2025-03-31 15:36:16.512 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:16.513 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:16.513 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:16.521 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:16.521 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:16.522 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:16.523 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:16.523 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:16.523 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:16.523 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:16.523 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:16.525 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:16.537 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:16.538 +05:30 [INF] Received HTTP response headers after 24.1608ms - 200
2025-03-31 15:36:16.538 +05:30 [INF] End processing HTTP request after 24.2406ms - 200
2025-03-31 15:36:16.538 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 17.524ms
2025-03-31 15:36:16.541 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:16.541 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:16.541 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:16.541 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:17.779 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:17.780 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:17.780 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.780 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.780 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:17.780 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.781 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.781 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:17.787 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.787 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:17.790 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:17.791 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:17.791 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.792 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.792 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:17.793 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.793 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:17.813 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:17.814 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:17.814 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.815 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.815 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:17.815 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:17.815 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.816 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.816 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:17.816 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:17.816 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:17.816 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:17.817 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.817 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.817 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:17.818 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.818 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:17.836 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:17.837 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.837 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:17.837 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:17.838 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.838 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:17.973 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:17.973 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 186.2857ms
2025-03-31 15:36:17.974 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.978 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 199.2477ms
2025-03-31 15:36:17.980 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:17.980 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 186.9811ms
2025-03-31 15:36:17.980 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.988 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 197.2204ms
2025-03-31 15:36:17.991 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:17.991 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 153.3393ms
2025-03-31 15:36:17.991 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:17.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 159.0013ms
2025-03-31 15:36:18.004 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:18.005 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:18.005 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.005 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.006 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.006 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:18.008 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.009 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:18.009 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:18.010 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.010 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.010 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:18.011 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.011 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:18.025 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:18.025 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 14.0467ms
2025-03-31 15:36:18.025 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.027 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 17.6448ms
2025-03-31 15:36:18.043 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:18.044 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:18.044 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.044 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.044 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.045 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.045 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:18.046 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.046 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:18.062 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:18.063 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 54.0602ms
2025-03-31 15:36:18.063 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.118 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:18.118 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 72.0258ms
2025-03-31 15:36:18.118 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 117.7363ms
2025-03-31 15:36:18.124 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 80.416ms
2025-03-31 15:36:18.146 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:18.146 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 328.5824ms
2025-03-31 15:36:18.146 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 339.8878ms
2025-03-31 15:36:18.161 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:18.162 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:18.162 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:18.163 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:18.170 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.170 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:18.211 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:18.212 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 41.6713ms
2025-03-31 15:36:18.212 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:18.219 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 58.122ms
2025-03-31 15:36:20.002 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:20.003 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.004 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.004 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.007 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.007 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.028 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:20.028 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.029 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.029 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.030 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.030 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.045 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:20.046 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.046 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.046 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.048 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.048 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.075 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.075 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 67.9987ms
2025-03-31 15:36:20.075 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.080 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 77.1967ms
2025-03-31 15:36:20.080 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:20.081 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.081 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.082 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.082 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.082 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.082 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.082 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.083 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.083 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.084 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.084 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 54.1787ms
2025-03-31 15:36:20.084 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.088 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 60.3566ms
2025-03-31 15:36:20.122 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.125 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 76.8673ms
2025-03-31 15:36:20.125 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.128 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 82.952ms
2025-03-31 15:36:20.161 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 15:36:20.162 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.162 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.162 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.163 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.163 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.165 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.165 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.167 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.167 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 83.6463ms
2025-03-31 15:36:20.167 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.167 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 15:36:20.168 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.168 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.168 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.168 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.168 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.168 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.169 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.169 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.170 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.170 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 106.6818ms
2025-03-31 15:36:20.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 15:36:20.195 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.195 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.195 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.195 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.195 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.195 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.197 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.197 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.198 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.198 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.203 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.203 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 4.6457ms
2025-03-31 15:36:20.203 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.204 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 15.761ms
2025-03-31 15:36:20.249 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.249 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 78.5054ms
2025-03-31 15:36:20.249 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.249 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.259 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 94.3844ms
2025-03-31 15:36:20.260 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.262 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 94.954ms
2025-03-31 15:36:20.263 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 100.9804ms
2025-03-31 15:36:20.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - null null
2025-03-31 15:36:20.274 +05:30 [INF] CORS policy execution successful.
2025-03-31 15:36:20.275 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.275 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:20.275 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:20.275 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:20.275 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.276 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:20.276 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:20.276 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:20.276 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:20.277 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:20.277 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.277 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:20.277 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:20.281 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.281 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 15:36:20.322 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 15:36:20.322 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 41.3051ms
2025-03-31 15:36:20.322 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 15:36:20.327 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=Shruti - 200 null application/json; charset=utf-8 54.5126ms
2025-03-31 15:36:26.547 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:26.548 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:26.548 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:26.562 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:26.563 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:26.563 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:26.566 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:26.576 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:26.577 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 15.2449ms
2025-03-31 15:36:26.578 +05:30 [INF] Received HTTP response headers after 29.3361ms - 200
2025-03-31 15:36:26.578 +05:30 [INF] End processing HTTP request after 29.4144ms - 200
2025-03-31 15:36:26.578 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:26.579 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:26.579 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:26.579 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:36.577 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:36.578 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:36.578 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:36.581 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:36.584 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:36.584 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:36.584 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:36.584 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:36.584 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:36.586 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:36.586 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:36.587 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:36.606 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:36.607 +05:30 [INF] Received HTTP response headers after 28.8923ms - 200
2025-03-31 15:36:36.607 +05:30 [INF] End processing HTTP request after 29.0201ms - 200
2025-03-31 15:36:36.608 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 26.6928ms
2025-03-31 15:36:36.617 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:36.617 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:36.617 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:36.618 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:46.619 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:46.620 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:46.620 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:46.623 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:46.624 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:46.625 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:46.625 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:46.627 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:46.636 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:46.636 +05:30 [INF] Received HTTP response headers after 16.1781ms - 200
2025-03-31 15:36:46.636 +05:30 [INF] End processing HTTP request after 16.2616ms - 200
2025-03-31 15:36:46.638 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 14.0476ms
2025-03-31 15:36:46.640 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:46.640 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:46.641 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:46.641 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:36:56.640 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:36:56.641 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:56.641 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:36:56.642 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:36:56.643 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:56.643 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:36:56.643 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:56.644 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:36:56.644 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:36:56.645 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:36:56.657 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:36:56.657 +05:30 [INF] Received HTTP response headers after 16.2364ms - 200
2025-03-31 15:36:56.657 +05:30 [INF] End processing HTTP request after 16.3199ms - 200
2025-03-31 15:36:56.658 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 15.5876ms
2025-03-31 15:36:56.661 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:36:56.661 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:36:56.661 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:36:56.661 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:37:06.663 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:37:06.665 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:37:06.665 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:37:06.667 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:37:06.668 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:37:06.668 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:37:06.668 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:37:06.668 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:37:06.668 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:37:06.670 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:37:06.670 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:37:06.673 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:37:06.681 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:37:06.682 +05:30 [INF] Received HTTP response headers after 16.1384ms - 200
2025-03-31 15:37:06.682 +05:30 [INF] End processing HTTP request after 16.2214ms - 200
2025-03-31 15:37:06.683 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 15.8666ms
2025-03-31 15:37:06.685 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:37:06.686 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:37:06.686 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:37:06.686 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 15:37:16.697 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 15:37:16.698 +05:30 [INF] Start processing HTTP request GET https://localhost:44302/health-status
2025-03-31 15:37:16.698 +05:30 [INF] Sending HTTP request GET https://localhost:44302/health-status
2025-03-31 15:37:16.701 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44302/health-status - null null
2025-03-31 15:37:16.702 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:37:16.702 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 15:37:16.702 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 15:37:16.702 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:37:16.703 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 15:37:16.703 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 15:37:16.706 +05:30 [INF] Executing endpoint 'Health checks'
2025-03-31 15:37:16.711 +05:30 [INF] Executed endpoint 'Health checks'
2025-03-31 15:37:16.712 +05:30 [INF] Received HTTP response headers after 13.5119ms - 200
2025-03-31 15:37:16.712 +05:30 [INF] End processing HTTP request after 13.6061ms - 200
2025-03-31 15:37:16.716 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:44302/health-status - 200 null application/json 14.8938ms
2025-03-31 15:37:16.719 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 15:37:16.720 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 15:37:16.720 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 15:37:16.721 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:25:48.311 +05:30 [INF] Starting SkillMatrixManagement.HttpApi.Host.
2025-03-31 17:25:53.698 +05:30 [INF] Loaded ABP modules:
2025-03-31 17:25:53.699 +05:30 [INF] - SkillMatrixManagement.SkillMatrixManagementHttpApiHostModule
2025-03-31 17:25:53.699 +05:30 [INF]   - SkillMatrixManagement.SkillMatrixManagementHttpApiModule
2025-03-31 17:25:53.699 +05:30 [INF]     - SkillMatrixManagement.SkillMatrixManagementApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]       - SkillMatrixManagement.SkillMatrixManagementDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Validation.AbpValidationModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Validation.AbpValidationAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Localization.AbpLocalizationModule
2025-03-31 17:25:53.699 +05:30 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2025-03-31 17:25:53.699 +05:30 [INF]               - Volo.Abp.Settings.AbpSettingsModule
2025-03-31 17:25:53.699 +05:30 [INF]                 - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]                 - Volo.Abp.Security.AbpSecurityModule
2025-03-31 17:25:53.699 +05:30 [INF]                 - Volo.Abp.Data.AbpDataModule
2025-03-31 17:25:53.699 +05:30 [INF]                   - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2025-03-31 17:25:53.699 +05:30 [INF]                   - Volo.Abp.Uow.AbpUnitOfWorkModule
2025-03-31 17:25:53.699 +05:30 [INF]                   - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]               - Volo.Abp.Threading.AbpThreadingModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Json.AbpJsonAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Timing.AbpTimingModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2025-03-31 17:25:53.699 +05:30 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Users.AbpUsersDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.OpenIddict.AbpOpenIddictDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.BlobStoring.Database.BlobStoringDatabaseDomainSharedModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.Application.AbpDddApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Auditing.AbpAuditingContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.Json.AbpJsonModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.SettingManagement.AbpSettingManagementApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.Users.AbpUsersAbstractionModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.Authorization.AbpAuthorizationModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.Account.AbpAccountApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]     - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2025-03-31 17:25:53.699 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Auditing.AbpAuditingModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.Http.AbpHttpModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Http.AbpHttpAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]             - Volo.Abp.Minify.AbpMinifyModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2025-03-31 17:25:53.699 +05:30 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2025-03-31 17:25:53.699 +05:30 [INF]         - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2025-03-31 17:25:53.700 +05:30 [INF]           - Volo.Abp.UI.AbpUiModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]           - Volo.Abp.Domain.AbpDddDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2025-03-31 17:25:53.700 +05:30 [INF]             - Volo.Abp.Specifications.AbpSpecificationsModule
2025-03-31 17:25:53.700 +05:30 [INF]             - Volo.Abp.Caching.AbpCachingModule
2025-03-31 17:25:53.700 +05:30 [INF]               - Volo.Abp.Serialization.AbpSerializationModule
2025-03-31 17:25:53.700 +05:30 [INF]             - Volo.Abp.Domain.AbpDddDomainSharedModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.SettingManagement.AbpSettingManagementHttpApiModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.Account.AbpAccountHttpApiModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityHttpApiModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2025-03-31 17:25:53.700 +05:30 [INF]   - Volo.Abp.Studio.Client.AspNetCore.AbpStudioClientAspNetCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.Studio.AbpStudioClientModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.Studio.AbpStudioClientContractsModule
2025-03-31 17:25:53.700 +05:30 [INF]   - Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.AbpAspNetCoreMvcUiLeptonXLiteThemeModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingAbstractionsModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.AutoMapper.AbpAutoMapperModule
2025-03-31 17:25:53.700 +05:30 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]   - SkillMatrixManagement.SkillMatrixManagementApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - SkillMatrixManagement.SkillMatrixManagementDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2025-03-31 17:25:53.700 +05:30 [INF]           - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.PermissionManagement.OpenIddict.AbpPermissionManagementDomainOpenIddictModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.Emailing.AbpEmailingModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.TextTemplating.AbpTextTemplatingModule
2025-03-31 17:25:53.700 +05:30 [INF]           - Volo.Abp.TextTemplating.Scriban.AbpTextTemplatingScribanModule
2025-03-31 17:25:53.700 +05:30 [INF]             - Volo.Abp.TextTemplating.AbpTextTemplatingCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.Identity.AbpIdentityDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.Users.AbpUsersDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.OpenIddict.AbpOpenIddictDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.BlobStoring.Database.BlobStoringDatabaseDomainModule
2025-03-31 17:25:53.700 +05:30 [INF]         - Volo.Abp.BlobStoring.AbpBlobStoringModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.Identity.AbpIdentityApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.Account.AbpAccountApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.SettingManagement.AbpSettingManagementApplicationModule
2025-03-31 17:25:53.700 +05:30 [INF]   - SkillMatrixManagement.EntityFrameworkCore.SkillMatrixManagementEntityFrameworkCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]       - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.EntityFrameworkCore.PostgreSql.AbpEntityFrameworkCorePostgreSqlModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2025-03-31 17:25:53.700 +05:30 [INF]     - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]       - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.OpenIddict.EntityFrameworkCore.AbpOpenIddictEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.BlobStoring.Database.EntityFrameworkCore.BlobStoringDatabaseEntityFrameworkCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]   - Volo.Abp.Account.Web.AbpAccountWebOpenIddictModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.Account.Web.AbpAccountWebModule
2025-03-31 17:25:53.701 +05:30 [INF]       - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]     - Volo.Abp.OpenIddict.AbpOpenIddictAspNetCoreModule
2025-03-31 17:25:53.701 +05:30 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2025-03-31 17:25:53.701 +05:30 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2025-03-31 17:25:53.974 +05:30 [DBG] Started background worker: Volo.Abp.BackgroundJobs.BackgroundJobWorker
2025-03-31 17:25:54.148 +05:30 [DBG] Started background worker: Volo.Abp.OpenIddict.Tokens.TokenCleanupBackgroundWorker
2025-03-31 17:25:55.659 +05:30 [INF] User profile is available. Using 'C:\Users\admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-31 17:25:56.012 +05:30 [INF] Initialized all ABP modules.
2025-03-31 17:25:56.084 +05:30 [INF] Initializing UI Database
2025-03-31 17:25:56.655 +05:30 [INF] Saving healthchecks configuration to database
2025-03-31 17:25:56.852 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/ - null null
2025-03-31 17:25:57.061 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:25:57.125 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:25:57.126 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:25:57.134 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-03-31 17:25:57.135 +05:30 [INF] Hosting environment: Development
2025-03-31 17:25:57.135 +05:30 [INF] Content root path: D:\SMMS_Backend\SkillMatrixManagement\src\SkillMatrixManagement.HttpApi.Host
2025-03-31 17:25:57.185 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ReceiveAsync(Socket socket, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.ReceiveAsync(Memory`1 buffer, SocketFlags socketFlags, Boolean fromNetworkStream, CancellationToken cancellationToken)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:25:57.778 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:25:58.374 +05:30 [DBG] Creating a new HealthReport history.
2025-03-31 17:25:58.374 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - null null
2025-03-31 17:25:58.906 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - 200 16553 application/javascript; charset=utf-8 610.4466ms
2025-03-31 17:25:58.946 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:25:58.947 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:25:58.997 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/swagger/v1/swagger.json - null null
2025-03-31 17:26:00.077 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:00.077 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:00.090 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:00.090 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:00.093 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:00.093 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:00.094 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:00.094 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:00.094 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:00.094 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:00.106 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:00.106 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:00.107 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:00.107 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:00.108 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:00.108 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:00.110 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:00.110 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:00.110 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:00.110 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:00.111 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:00.111 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:00.111 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:00.111 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:00.111 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:00.111 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:00.435 +05:30 [INF] Executing endpoint '/Index'
2025-03-31 17:26:00.478 +05:30 [INF] Route matched with {page = "/Index", area = "", action = "", controller = ""}. Executing page /Index
2025-03-31 17:26:00.484 +05:30 [INF] Skipping the execution of current filter as its not the most effective filter implementing the policy Microsoft.AspNetCore.Mvc.ViewFeatures.IAntiforgeryPolicy
2025-03-31 17:26:00.803 +05:30 [INF] Executing handler method SkillMatrixManagement.Pages.IndexModel.OnGetAsync - ModelState is "Valid"
2025-03-31 17:26:01.021 +05:30 [INF] Executed handler method OnGetAsync, returned result .
2025-03-31 17:26:01.024 +05:30 [INF] Executing an implicit handler method - ModelState is "Valid"
2025-03-31 17:26:01.024 +05:30 [INF] Executed an implicit handler method, returned result Microsoft.AspNetCore.Mvc.RazorPages.PageResult.
2025-03-31 17:26:01.031 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 2034.8643ms
2025-03-31 17:26:01.036 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/abp/application-configuration - null null
2025-03-31 17:26:01.039 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:01.039 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:01.039 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:01.040 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:01.040 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:01.044 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:01.061 +05:30 [INF] Route matched with {area = "abp", action = "Get", controller = "AbpApplicationConfiguration", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto] GetAsync(Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions) on controller Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 17:26:01.300 +05:30 [DBG] Executing AbpApplicationConfigurationAppService.GetAsync()...
2025-03-31 17:26:02.097 +05:30 [DBG] Added bundle 'LeptonXLite.Global' to the page in 14.32 ms.
2025-03-31 17:26:02.123 +05:30 [DBG] Added bundle 'LeptonXLite.Global' to the page in 6.95 ms.
2025-03-31 17:26:02.136 +05:30 [INF] Executed page /Index in 1653.7537ms
2025-03-31 17:26:02.137 +05:30 [INF] Executed endpoint '/Index'
2025-03-31 17:26:02.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/ - 200 null text/html; charset=utf-8 5308.3954ms
2025-03-31 17:26:02.222 +05:30 [DBG] Executed AbpApplicationConfigurationAppService.GetAsync().
2025-03-31 17:26:02.237 +05:30 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto'.
2025-03-31 17:26:02.284 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc) in 1222.8851ms
2025-03-31 17:26:02.284 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/abp/application-configuration - 200 null application/json; charset=utf-8 1262.3999ms
2025-03-31 17:26:02.306 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ApplicationConfigurationScript - null null
2025-03-31 17:26:02.306 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ApplicationLocalizationScript?cultureName=en - null null
2025-03-31 17:26:02.307 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.307 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.307 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:02.307 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:02.307 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.308 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.308 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:02.309 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/Abp/ServiceProxyScript - null null
2025-03-31 17:26:02.310 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:02.311 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.312 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:02.312 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.313 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.313 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:02.314 +05:30 [INF] Route matched with {area = "Abp", action = "Get", controller = "AbpApplicationConfigurationScript", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Get() on controller Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 17:26:02.314 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.315 +05:30 [INF] Executing endpoint 'Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.317 +05:30 [INF] Route matched with {area = "Abp", action = "GetAll", controller = "AbpServiceProxyScript", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult GetAll(Volo.Abp.AspNetCore.Mvc.ProxyScripting.ServiceProxyGenerationModel) on controller Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 17:26:02.318 +05:30 [INF] Route matched with {area = "Abp", action = "Get", controller = "AbpApplicationLocalizationScript", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetAsync(Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto) on controller Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController (Volo.Abp.AspNetCore.Mvc).
2025-03-31 17:26:02.324 +05:30 [DBG] Executing AbpApplicationConfigurationAppService.GetAsync()...
2025-03-31 17:26:02.337 +05:30 [INF] Executing ContentResult with HTTP Response ContentType of application/javascript
2025-03-31 17:26:02.338 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc) in 20.9216ms
2025-03-31 17:26:02.339 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController.GetAsync (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.340 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ApplicationLocalizationScript?cultureName=en - 200 40054 application/javascript 34.4481ms
2025-03-31 17:26:02.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - null null
2025-03-31 17:26:02.344 +05:30 [DBG] Executed AbpApplicationConfigurationAppService.GetAsync().
2025-03-31 17:26:02.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_framework/aspnetcore-browser-refresh.js - 200 16553 application/javascript; charset=utf-8 1.2898ms
2025-03-31 17:26:02.345 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.RegisterAsyncByInput
2025-03-31 17:26:02.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/_vs/browserLink - null null
2025-03-31 17:26:02.350 +05:30 [INF] Executing ContentResult with HTTP Response ContentType of application/javascript
2025-03-31 17:26:02.350 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc) in 36.5352ms
2025-03-31 17:26:02.350 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController.Get (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.351 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ApplicationConfigurationScript - 200 7657 application/javascript 45.4789ms
2025-03-31 17:26:02.353 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.SendPasswordResetCodeAsyncByInput
2025-03-31 17:26:02.353 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.VerifyPasswordResetTokenAsyncByInput
2025-03-31 17:26:02.353 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.ResetPasswordAsyncByInput
2025-03-31 17:26:02.354 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.LoginByLogin
2025-03-31 17:26:02.354 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.Logout
2025-03-31 17:26:02.355 +05:30 [DBG] ActionApiDescriptionModel.Create: Account.CheckPasswordByLogin
2025-03-31 17:26:02.355 +05:30 [DBG] ActionApiDescriptionModel.Create: DynamicClaims.RefreshAsync
2025-03-31 17:26:02.356 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.GetAsync
2025-03-31 17:26:02.356 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.UpdateAsyncByInput
2025-03-31 17:26:02.356 +05:30 [DBG] ActionApiDescriptionModel.Create: Profile.ChangePasswordAsyncByInput
2025-03-31 17:26:02.357 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpTenant.FindTenantByNameAsyncByName
2025-03-31 17:26:02.357 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpTenant.FindTenantByIdAsyncById
2025-03-31 17:26:02.357 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetAllListAsync
2025-03-31 17:26:02.358 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetListAsyncByInput
2025-03-31 17:26:02.358 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.GetAsyncById
2025-03-31 17:26:02.359 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.CreateAsyncByInput
2025-03-31 17:26:02.359 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.360 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityRole.DeleteAsyncById
2025-03-31 17:26:02.360 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetAsyncById
2025-03-31 17:26:02.360 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetListAsyncByInput
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.CreateAsyncByInput
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.DeleteAsyncById
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetRolesAsyncById
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.GetAssignableRolesAsync
2025-03-31 17:26:02.361 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.UpdateRolesAsyncByIdAndInput
2025-03-31 17:26:02.362 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.FindByUsernameAsyncByUserName
2025-03-31 17:26:02.362 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUser.FindByEmailAsyncByEmail
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.FindByIdAsyncById
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.FindByUserNameAsyncByUserName
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.SearchAsyncByInput
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: IdentityUserLookup.GetCountAsyncByInput
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: Permissions.GetAsyncByProviderNameAndProviderKey
2025-03-31 17:26:02.363 +05:30 [DBG] ActionApiDescriptionModel.Create: Permissions.UpdateAsyncByProviderNameAndProviderKeyAndInput
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.GetAsync
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.UpdateAsyncByInput
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: EmailSettings.SendTestEmailAsyncByInput
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.GetAsync
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.GetTimezonesAsync
2025-03-31 17:26:02.364 +05:30 [DBG] ActionApiDescriptionModel.Create: TimeZoneSettings.UpdateAsyncByTimezone
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetAsyncById
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetListAsyncByInput
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.CreateAsyncByInput
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.DeleteAsyncById
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.GetDefaultConnectionStringAsyncById
2025-03-31 17:26:02.365 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString
2025-03-31 17:26:02.366 +05:30 [DBG] ActionApiDescriptionModel.Create: Tenant.DeleteDefaultConnectionStringAsyncById
2025-03-31 17:26:02.366 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.GetAsyncByProviderNameAndProviderKey
2025-03-31 17:26:02.366 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.UpdateAsyncByProviderNameAndProviderKeyAndInput
2025-03-31 17:26:02.366 +05:30 [DBG] ActionApiDescriptionModel.Create: Features.DeleteAsyncByProviderNameAndProviderKey
2025-03-31 17:26:02.367 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApplicationConfiguration.GetAsyncByOptions
2025-03-31 17:26:02.367 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApplicationLocalization.GetAsyncByInput
2025-03-31 17:26:02.367 +05:30 [DBG] ActionApiDescriptionModel.Create: AbpApiDefinition.GetByModel
2025-03-31 17:26:02.367 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.CreateAsyncByInput
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetByIdAsyncById
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetcategoryNameAsyncByCategoryName
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetPagedListAsyncByInput
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.DeleteAsyncById
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.PermanentDeleteAsyncById
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.RestoreCategoryAsyncById
2025-03-31 17:26:02.368 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetLookupAsync
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetByCategoryNameAsyncByCategoryName
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppCategory.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.CreateAsyncByInput
2025-03-31 17:26:02.369 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.DeleteAsyncById
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetByIdAsyncById
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetLookupAsync
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.GetPagedListAsyncByInput
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.PermanentDeleteAsyncById
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.RestoreDepartmentInternalRoleAsyncById
2025-03-31 17:26:02.370 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartmentInternalRole.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.CreateAsyncByInput
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.DeleteAsyncById
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetByIdAsyncById
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetLookupAsync
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.GetPagedListAsyncByInput
2025-03-31 17:26:02.371 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.PermanentDeleteAsyncById
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.RestoreDepartmentAsyncById
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppDepartment.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.CreateAsyncByInput
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.DeleteAsyncById
2025-03-31 17:26:02.372 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetByIdAsyncById
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetLookupAsync
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.GetPagedListAsyncByInput
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.PermanentDeleteAsyncById
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.RestoreEmployeeSkillAsyncById
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppEmployeeSkill.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.373 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.CreateAsyncByInput
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.DeleteAsyncById
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetByIdAsyncById
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetLookupAsync
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.GetPagedListAsyncByInput
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.PermanentDeleteAsyncById
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.RestoreRoleAsyncById
2025-03-31 17:26:02.374 +05:30 [DBG] ActionApiDescriptionModel.Create: AppRole.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.CreateAsyncByInput
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.DeleteAsyncById
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetByIdAsyncById
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetLookupAsync
2025-03-31 17:26:02.375 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.GetPagedListAsyncByInput
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.PermanentDeleteAsyncById
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.RestoreSkillSubtopicAsyncById
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppSkillSubtopic.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CountAsyncByIncludeDeleted
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CreateAsyncByInput
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.DeleteAsyncById
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetAllAsyncByIncludeDeleted
2025-03-31 17:26:02.376 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetByIdAsyncById
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetLookupAsync
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetPagedListAsyncByInput
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.PermanentDeleteAsyncById
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.RestoreUserAsyncById
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.UpdateAsyncByIdAndInput
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.GetUserNameAndEmailByUserNameOrEmailByUserNameOrEmail
2025-03-31 17:26:02.377 +05:30 [DBG] ActionApiDescriptionModel.Create: AppUser.CreateOrUpdateUserAsyncByInput
2025-03-31 17:26:02.378 +05:30 [DBG] ActionApiDescriptionModel.Create: AppAiRecommendation.GetSkillRecommendationByUserId
2025-03-31 17:26:02.395 +05:30 [INF] Executing ContentResult with HTTP Response ContentType of application/javascript
2025-03-31 17:26:02.396 +05:30 [INF] Executed action Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc) in 78.2557ms
2025-03-31 17:26:02.396 +05:30 [INF] Executed endpoint 'Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController.GetAll (Volo.Abp.AspNetCore.Mvc)'
2025-03-31 17:26:02.397 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/Abp/ServiceProxyScript - 200 41815 application/javascript 88.1507ms
2025-03-31 17:26:02.399 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/_vs/browserLink - 200 null text/javascript; charset=UTF-8 50.2102ms
2025-03-31 17:26:02.889 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/abp/Swashbuckle/SetCsrfCookie - null null
2025-03-31 17:26:02.890 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.890 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.890 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:02.890 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:02.890 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.891 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:02.891 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:02.892 +05:30 [INF] Executing endpoint 'Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle)'
2025-03-31 17:26:02.893 +05:30 [INF] Route matched with {area = "Abp", action = "SetCsrfCookie", controller = "AbpSwashbuckle", page = ""}. Executing controller action with signature Void SetCsrfCookie() on controller Volo.Abp.Swashbuckle.AbpSwashbuckleController (Volo.Abp.Swashbuckle).
2025-03-31 17:26:02.895 +05:30 [INF] Executed action Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle) in 1.8107ms
2025-03-31 17:26:02.895 +05:30 [INF] Executed endpoint 'Volo.Abp.Swashbuckle.AbpSwashbuckleController.SetCsrfCookie (Volo.Abp.Swashbuckle)'
2025-03-31 17:26:02.896 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/abp/Swashbuckle/SetCsrfCookie - 204 null null 7.6187ms
2025-03-31 17:26:02.992 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/.well-known/openid-configuration - null null
2025-03-31 17:26:02.992 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:02.993 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:03.008 +05:30 [INF] The request URI matched a server endpoint: "Configuration".
2025-03-31 17:26:03.008 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:03.008 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:03.008 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:03.019 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ExtractConfigurationRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ExtractGetRequest`1[[OpenIddict.Server.OpenIddictServerEvents+ExtractConfigurationRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.021 +05:30 [INF] The configuration request was successfully extracted: {}.
2025-03-31 17:26:03.021 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ExtractConfigurationRequest.
2025-03-31 17:26:03.022 +05:30 [INF] The configuration request was successfully validated.
2025-03-31 17:26:03.022 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ValidateConfigurationRequest.
2025-03-31 17:26:03.025 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachIssuer.
2025-03-31 17:26:03.026 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachEndpoints.
2025-03-31 17:26:03.027 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachGrantTypes.
2025-03-31 17:26:03.027 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachResponseTypes.
2025-03-31 17:26:03.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachResponseModes.
2025-03-31 17:26:03.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachClientAuthenticationMethods.
2025-03-31 17:26:03.029 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachCodeChallengeMethods.
2025-03-31 17:26:03.030 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachScopes.
2025-03-31 17:26:03.275 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by Volo.Abp.OpenIddict.Scopes.AttachScopes.
2025-03-31 17:26:03.276 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachClaims.
2025-03-31 17:26:03.276 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachSubjectTypes.
2025-03-31 17:26:03.276 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachPromptValues.
2025-03-31 17:26:03.277 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachSigningAlgorithms.
2025-03-31 17:26:03.279 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+HandleConfigurationRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+AttachAdditionalMetadata.
2025-03-31 17:26:03.281 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+HandleConfigurationRequest.
2025-03-31 17:26:03.284 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+AttachHttpResponseCode`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.285 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+AttachWwwAuthenticateHeader`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.287 +05:30 [INF] The response was successfully returned as a JSON document: {
  "issuer": "https://localhost:44302/",
  "authorization_endpoint": "https://localhost:44302/connect/authorize",
  "token_endpoint": "https://localhost:44302/connect/token",
  "introspection_endpoint": "https://localhost:44302/connect/introspect",
  "end_session_endpoint": "https://localhost:44302/connect/endsession",
  "revocation_endpoint": "https://localhost:44302/connect/revocat",
  "userinfo_endpoint": "https://localhost:44302/connect/userinfo",
  "device_authorization_endpoint": "https://localhost:44302/device",
  "jwks_uri": "https://localhost:44302/.well-known/jwks",
  "grant_types_supported": [
    "authorization_code",
    "implicit",
    "password",
    "client_credentials",
    "refresh_token",
    "urn:ietf:params:oauth:grant-type:device_code"
  ],
  "response_types_supported": [
    "code",
    "code id_token",
    "code id_token token",
    "code token",
    "id_token",
    "id_token token",
    "token",
    "none"
  ],
  "response_modes_supported": [
    "query",
    "form_post",
    "fragment"
  ],
  "scopes_supported": [
    "openid",
    "offline_access",
    "email",
    "profile",
    "phone",
    "roles",
    "address",
    "SkillMatrixManagement"
  ],
  "claims_supported": [
    "aud",
    "exp",
    "iat",
    "iss",
    "sub"
  ],
  "id_token_signing_alg_values_supported": [
    "RS256"
  ],
  "code_challenge_methods_supported": [
    "plain",
    "S256"
  ],
  "subject_types_supported": [
    "public"
  ],
  "prompt_values_supported": [
    "consent",
    "login",
    "none",
    "select_account"
  ],
  "token_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "introspection_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "revocation_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "device_authorization_endpoint_auth_methods_supported": [
    "client_secret_post",
    "private_key_jwt",
    "client_secret_basic"
  ],
  "claims_parameter_supported": false,
  "request_parameter_supported": false,
  "request_uri_parameter_supported": false,
  "tls_client_certificate_bound_access_tokens": false,
  "authorization_response_iss_parameter_supported": true
}.
2025-03-31 17:26:03.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ProcessJsonResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext was marked as handled by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ProcessJsonResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ApplyConfigurationResponseContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ApplyConfigurationResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.288 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was marked as handled by OpenIddict.Server.OpenIddictServerHandlers+Discovery+ApplyConfigurationResponse`1[[OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext, OpenIddict.Server, Version=6.0.0.0, Culture=neutral, PublicKeyToken=35a561290d20de2f]].
2025-03-31 17:26:03.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/.well-known/openid-configuration - 200 2410 application/json;charset=UTF-8 297.8528ms
2025-03-31 17:26:08.946 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:08.983 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:08.983 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:08.987 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:08.991 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:08.991 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:08.997 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:09.001 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:09.001 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:26:19.000 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:19.001 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:19.001 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:19.004 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:19.005 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:19.005 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:19.006 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:19.006 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:19.006 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:26:29.007 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:29.010 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:29.010 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:29.023 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:29.024 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:29.024 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:29.025 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:29.026 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:29.026 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:26:29.326 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 17:26:29.326 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 17:26:29.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 17:26:29.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=dharmi - null null
2025-03-31 17:26:29.339 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:29.339 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:29.339 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:29.339 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:29.341 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:29.341 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:29.341 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:29.341 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:29.343 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 17:26:29.343 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:29.343 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:29.343 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:29.347 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 17:26:29.347 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 17:26:29.347 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 17:26:29.348 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:26:32.257 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.257 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.262 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 2915.1516ms
2025-03-31 17:26:32.262 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.264 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 2917.3886ms
2025-03-31 17:26:32.264 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.265 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 2938.1469ms
2025-03-31 17:26:32.266 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 2939.8852ms
2025-03-31 17:26:32.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - null null
2025-03-31 17:26:32.268 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - null null
2025-03-31 17:26:32.271 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:32.271 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:32.271 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.271 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:32.273 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.273 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.273 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartment", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentService (SkillMatrixManagement.Application).
2025-03-31 17:26:32.273 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppRoleService (SkillMatrixManagement.Application).
2025-03-31 17:26:32.275 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 2927.4275ms
2025-03-31 17:26:32.275 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.278 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 2951.4576ms
2025-03-31 17:26:32.279 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - null null
2025-03-31 17:26:32.281 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:32.281 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.281 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.281 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:32.281 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:32.281 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.282 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.282 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:32.283 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.RoleDTO.RoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.283 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentDTO.DepartmentLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.283 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 9.9408ms
2025-03-31 17:26:32.283 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.283 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.283 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application) in 10.0722ms
2025-03-31 17:26:32.283 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.283 +05:30 [INF] Route matched with {action = "GetLookup", controller = "AppDepartmentInternalRole", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto]]] GetLookupAsync() on controller SkillMatrixManagement.Services.AppDepartmentInternalRoleService (SkillMatrixManagement.Application).
2025-03-31 17:26:32.285 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-role/lookup - 200 null application/json; charset=utf-8 16.4453ms
2025-03-31 17:26:32.285 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department/lookup - 200 null application/json; charset=utf-8 17.2524ms
2025-03-31 17:26:32.295 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.DepartmentInternalRoleDTO.DepartmentInternalRoleLookupDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.296 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application) in 12.3575ms
2025-03-31 17:26:32.296 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppDepartmentInternalRoleService.GetLookupAsync (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.298 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-department-internal-role/lookup - 200 null application/json; charset=utf-8 18.2541ms
2025-03-31 17:26:32.734 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.735 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 3387.2999ms
2025-03-31 17:26:32.735 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.736 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=dharmi - 200 null application/json; charset=utf-8 3409.427ms
2025-03-31 17:26:32.738 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=dharmi - null null
2025-03-31 17:26:32.739 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:26:32.739 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.739 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.740 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:26:32.740 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:26:32.740 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.740 +05:30 [INF] Route matched with {action = "GetUserNameAndEmailByUserNameOrEmail", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.String[]]] GetUserNameAndEmailByUserNameOrEmail(System.String) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:26:32.756 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.String[], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:26:32.756 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application) in 15.6347ms
2025-03-31 17:26:32.756 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetUserNameAndEmailByUserNameOrEmail (SkillMatrixManagement.Application)'
2025-03-31 17:26:32.757 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/user-name-and-email-by-user-name-or-email?userNameOrEmail=dharmi - 200 null application/json; charset=utf-8 19.4522ms
2025-03-31 17:26:39.035 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:39.036 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:39.036 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:39.040 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:39.040 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:39.040 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:39.041 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:39.041 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:39.041 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:26:49.035 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:49.037 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:49.037 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:49.042 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:49.042 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:49.042 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:49.042 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:49.042 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:49.042 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:26:59.047 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:26:59.048 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:59.048 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:26:59.052 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:26:59.052 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:26:59.052 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:26:59.053 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:26:59.053 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:26:59.053 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:09.059 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:09.060 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:09.060 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:09.064 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:09.065 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:09.065 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:09.065 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:09.065 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:09.065 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:19.063 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:19.065 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:19.065 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:19.070 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:19.070 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:19.070 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:19.071 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:19.071 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:19.071 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:29.067 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:29.068 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:29.068 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:29.075 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:29.076 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:29.076 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:29.076 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:29.076 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:29.076 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:39.070 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:39.071 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:39.071 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:39.075 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:39.075 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:39.075 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:39.076 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:39.076 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:39.076 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:49.075 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:49.076 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:49.076 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:49.079 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:49.080 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:49.080 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:49.080 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:49.080 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:49.080 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:27:59.088 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:27:59.089 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:59.089 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:27:59.095 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:27:59.095 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:27:59.095 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:27:59.095 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:27:59.095 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:27:59.095 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:09.093 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:09.095 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:09.095 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:09.101 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:09.102 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:09.102 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:09.102 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:09.102 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:09.102 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:11.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43 - null null
2025-03-31 17:28:11.944 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:11.944 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:11.944 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:11.944 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:11.944 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:11.944 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:11.945 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:11.945 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:11.947 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43 - 404 null null 4.4162ms
2025-03-31 17:28:11.948 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43, Response status code: 404
2025-03-31 17:28:11.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43 - null null
2025-03-31 17:28:11.954 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:11.954 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:11.955 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:11.955 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:11.955 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:11.955 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:11.956 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43 - 404 null null 7.6391ms
2025-03-31 17:28:11.957 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43, Response status code: 404
2025-03-31 17:28:13.723 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 17:28:13.724 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:13.724 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:13.724 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:13.724 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:13.724 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:13.724 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:13.725 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:13.725 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:13.726 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:13.729 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:13.905 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:13.935 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 206.2775ms
2025-03-31 17:28:13.935 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:13.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 213.0071ms
2025-03-31 17:28:13.937 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 17:28:13.938 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:13.938 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:13.939 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:13.939 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:13.939 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:13.939 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:13.939 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:13.939 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:13.966 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:13.966 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 27.0044ms
2025-03-31 17:28:13.966 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:13.967 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 29.9159ms
2025-03-31 17:28:16.361 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43/by-id - null null
2025-03-31 17:28:16.362 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-employee-skill?includeDeleted=false - null null
2025-03-31 17:28:16.362 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:16.362 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:16.362 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.362 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.362 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:16.362 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:16.362 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.363 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:16.363 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.364 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.367 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppEmployeeSkill", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.EmployeeSkillDTO.EmployeeSkillDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppEmployeeSkillService (SkillMatrixManagement.Application).
2025-03-31 17:28:16.367 +05:30 [INF] Route matched with {action = "GetById", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]] GetByIdAsync(System.Guid) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:16.526 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-31 17:28:16.529 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application) in 162.0046ms
2025-03-31 17:28:16.529 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.573 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43/by-id - 200 null application/json; charset=utf-8 211.2385ms
2025-03-31 17:28:16.587 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43/by-id - null null
2025-03-31 17:28:16.590 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:16.590 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.591 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.591 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:16.591 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:16.591 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.620 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.620 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:16.622 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.622 +05:30 [INF] Route matched with {action = "GetById", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]] GetByIdAsync(System.Guid) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:16.671 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-31 17:28:16.671 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application) in 49.1474ms
2025-03-31 17:28:16.672 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetByIdAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.700 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user/3a18ef34-8743-879e-81e5-ad9ea4fa3b43/by-id - 200 null application/json; charset=utf-8 112.8828ms
2025-03-31 17:28:16.834 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.EmployeeSkillDTO.EmployeeSkillDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:16.835 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application) in 467.7053ms
2025-03-31 17:28:16.835 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.836 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-employee-skill?includeDeleted=false - 200 null application/json; charset=utf-8 473.8563ms
2025-03-31 17:28:16.838 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-employee-skill?includeDeleted=false - null null
2025-03-31 17:28:16.839 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.839 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:16.839 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:16.840 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.840 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppEmployeeSkill", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.EmployeeSkillDTO.EmployeeSkillDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppEmployeeSkillService (SkillMatrixManagement.Application).
2025-03-31 17:28:16.848 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.EmployeeSkillDTO.EmployeeSkillDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:16.848 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application) in 8.0933ms
2025-03-31 17:28:16.848 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppEmployeeSkillService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:16.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-employee-skill?includeDeleted=false - 200 null application/json; charset=utf-8 10.8761ms
2025-03-31 17:28:19.108 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:19.109 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:19.109 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:19.113 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:19.113 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:19.113 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:19.113 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:19.113 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:19.113 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:19.507 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 17:28:19.508 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:19.508 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:19.508 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:19.508 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:19.508 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:19.508 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:19.509 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:19.509 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:19.511 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:19.511 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:19.530 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:19.530 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 19.0628ms
2025-03-31 17:28:19.530 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:19.531 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 24.552ms
2025-03-31 17:28:19.533 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 17:28:19.534 +05:30 [INF] CORS policy execution successful.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:19.534 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:19.534 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:19.535 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:19.535 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:19.543 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:19.543 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 7.656ms
2025-03-31 17:28:19.543 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:19.545 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 12.2744ms
2025-03-31 17:28:29.125 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:29.126 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:29.126 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:29.133 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:29.134 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:29.134 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:29.134 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:29.134 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:29.134 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:39.127 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:39.129 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:39.129 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:39.141 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:39.143 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:39.143 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:39.143 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:39.144 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:39.144 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:45.437 +05:30 [INF] Request starting HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - null null
2025-03-31 17:28:45.437 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessRequestContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ResolveRequestUri.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.OpenIddictServerHandlers+InferEndpointType.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateTransportSecurityRequirement.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Server.OpenIddictServerEvents+ProcessRequestContext was successfully processed by OpenIddict.Server.AspNetCore.OpenIddictServerAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ValidateHostHeader.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+EvaluateValidatedTokens.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromAuthorizationHeader.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromBodyForm.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers+ExtractAccessTokenFromQueryString.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was successfully processed by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:45.438 +05:30 [DBG] The event OpenIddict.Validation.OpenIddictValidationEvents+ProcessAuthenticationContext was marked as rejected by OpenIddict.Validation.OpenIddictValidationHandlers+ValidateRequiredTokens.
2025-03-31 17:28:45.438 +05:30 [DBG] AuthenticationScheme: OpenIddict.Validation.AspNetCore was not authenticated.
2025-03-31 17:28:45.439 +05:30 [INF] Executing endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:45.439 +05:30 [INF] Route matched with {action = "GetAll", controller = "AppUser", area = "", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[System.Collections.Generic.List`1[SkillMatrixManagement.DTOs.UserDTO.UserDto]]] GetAllAsync(Boolean) on controller SkillMatrixManagement.Services.AppUserService (SkillMatrixManagement.Application).
2025-03-31 17:28:45.446 +05:30 [INF] Executing ObjectResult, writing value of type 'SkillMatrixManagement.DTOs.Shared.ServiceResponse`1[[System.Collections.Generic.List`1[[SkillMatrixManagement.DTOs.UserDTO.UserDto, SkillMatrixManagement.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-31 17:28:45.446 +05:30 [INF] Executed action SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application) in 7.1099ms
2025-03-31 17:28:45.446 +05:30 [INF] Executed endpoint 'SkillMatrixManagement.Services.AppUserService.GetAllAsync (SkillMatrixManagement.Application)'
2025-03-31 17:28:45.447 +05:30 [INF] Request finished HTTP/2 GET https://localhost:44302/api/app/app-user?includeDeleted=false - 200 null application/json; charset=utf-8 9.9783ms
2025-03-31 17:28:49.144 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:49.145 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:49.146 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:49.157 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:49.158 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:49.158 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:49.158 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:49.159 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:49.159 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:28:59.149 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:28:59.149 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:59.149 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:28:59.153 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:28:59.153 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:28:59.153 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:28:59.154 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:28:59.154 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:28:59.154 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:09.161 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:09.162 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:09.162 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:09.165 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:09.165 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:09.165 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:09.165 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:09.165 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:09.166 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:19.183 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:19.184 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:19.184 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:19.188 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:19.188 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:19.188 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:19.188 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:19.188 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:19.189 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:29.193 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:29.194 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:29.194 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:29.197 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:29.197 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:29.197 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:29.197 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:29.198 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:29.198 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:39.212 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:39.213 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:39.213 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:39.217 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:39.217 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:39.217 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:39.217 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:39.218 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:39.218 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:49.221 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:49.222 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:49.222 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:49.233 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:49.234 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:49.234 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:49.234 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:49.235 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:49.235 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:29:59.225 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:29:59.227 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:59.227 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:29:59.233 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:29:59.233 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:29:59.233 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:29:59.233 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:29:59.233 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:29:59.233 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:09.240 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:09.240 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:09.240 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:09.245 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:09.245 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:09.245 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:09.245 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:09.245 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:09.245 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:19.249 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:19.250 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:19.250 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:19.261 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:19.262 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:19.262 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:19.262 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:19.263 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:19.263 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:29.252 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:29.253 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:29.253 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:29.264 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:29.265 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:29.265 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:29.266 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:29.266 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:29.266 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:39.254 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:39.254 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:39.254 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:39.258 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:39.258 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:39.258 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:39.259 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:39.259 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:39.259 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:49.269 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:49.270 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:49.270 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:49.278 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:49.278 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:49.278 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:49.279 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:49.279 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:49.279 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:30:59.285 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:30:59.286 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:59.286 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:30:59.289 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:30:59.290 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:30:59.290 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:30:59.290 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:30:59.290 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:30:59.290 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:09.289 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:09.290 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:09.290 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:09.296 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:09.297 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:09.297 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:09.297 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:09.297 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:09.298 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:19.294 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:19.295 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:19.295 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:19.305 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:19.306 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:19.306 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:19.306 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:19.307 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:19.307 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:29.306 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:29.307 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:29.307 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:29.316 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:29.317 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:29.317 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:29.317 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:29.318 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:29.318 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:39.310 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:39.311 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:39.311 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:39.315 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:39.315 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:39.315 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:39.316 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:39.316 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:39.316 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:49.330 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:49.333 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:49.333 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:49.343 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:49.343 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:49.343 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:49.344 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:49.344 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:49.344 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:31:59.347 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:31:59.348 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:59.348 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:31:59.353 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:31:59.353 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:31:59.353 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:31:59.353 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:31:59.353 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:31:59.353 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:09.350 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:09.351 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:09.351 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:09.354 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:09.354 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:09.354 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:09.354 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:09.354 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:09.354 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:19.359 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:19.360 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:19.360 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:19.363 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:19.363 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:19.363 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:19.364 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:19.364 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:19.364 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:29.380 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:29.381 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:29.381 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:29.385 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:29.385 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:29.385 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:29.385 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:29.385 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:29.385 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:39.382 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:39.382 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:39.382 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:39.387 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:39.387 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:39.387 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:39.387 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:39.387 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:39.387 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:49.385 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:49.386 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:49.386 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:49.394 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:49.395 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:49.395 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:49.395 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:49.395 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:49.395 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:32:59.395 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:32:59.396 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:59.396 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:32:59.401 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:32:59.401 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:32:59.401 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:32:59.401 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:32:59.401 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:32:59.401 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:09.401 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:09.402 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:09.402 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:09.408 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:09.408 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:09.408 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:09.408 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:09.408 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:09.408 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:19.413 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:19.414 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:19.414 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:19.417 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:19.418 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:19.418 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:19.418 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:19.418 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:19.418 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:29.424 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:29.426 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:29.426 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:29.436 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:29.436 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:29.436 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:29.437 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:29.437 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:29.437 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:39.429 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:39.429 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:39.429 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:39.432 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:39.432 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:39.432 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:39.433 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:39.433 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:39.433 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:49.432 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:49.433 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:49.433 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:49.443 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:49.444 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:49.444 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:49.445 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:49.445 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:49.445 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:33:59.436 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:33:59.437 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:59.437 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:33:59.440 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:33:59.440 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:33:59.440 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:33:59.440 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:33:59.440 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:33:59.440 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:09.454 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:09.455 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:09.456 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:09.462 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:09.462 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:09.462 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:09.462 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:09.463 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:09.463 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:19.460 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:19.461 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:19.461 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:19.464 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:19.464 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:19.464 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:19.464 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:19.464 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:19.464 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:29.470 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:29.470 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:29.470 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:29.474 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:29.474 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:29.474 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:29.474 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:29.475 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:29.475 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:39.483 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:39.484 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:39.484 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:39.487 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:39.488 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:39.488 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:39.488 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:39.488 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:39.488 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:49.494 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:49.495 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:49.495 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:49.505 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:49.506 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:49.506 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:49.507 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:49.507 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:49.507 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:34:59.507 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:34:59.508 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:59.508 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:34:59.518 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:34:59.518 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:34:59.519 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:34:59.519 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:34:59.519 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:34:59.519 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:09.511 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:09.512 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:09.512 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:09.522 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:09.523 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:35:09.523 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:09.523 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:09.524 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:09.524 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:19.515 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:19.516 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:19.516 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:19.527 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:19.528 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:35:19.528 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:19.528 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:19.528 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:19.528 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:29.519 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:29.520 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:29.520 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:29.526 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:29.526 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:35:29.526 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:29.527 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:29.527 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:29.527 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:39.536 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:39.536 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:39.536 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:39.540 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:39.541 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:35:39.541 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:39.541 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:39.541 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:39.541 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:49.556 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:49.557 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:49.557 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:49.561 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:49.562 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:35:49.562 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:49.562 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:49.562 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:49.562 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:35:59.569 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:35:59.570 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:59.570 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:35:59.573 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:35:59.574 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:35:59.574 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:35:59.575 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:35:59.575 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:09.583 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:09.584 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:09.584 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:09.596 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:09.600 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:09.600 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:09.602 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:09.602 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:09.602 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:19.613 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:19.614 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:19.614 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:19.621 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:19.621 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:19.622 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:19.622 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:19.622 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:19.622 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:29.625 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:29.626 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:29.626 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:29.628 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:29.629 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:29.629 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:29.629 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:29.629 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:29.629 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:39.652 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:39.653 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:39.653 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:39.660 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:39.660 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:39.660 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:39.660 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:39.661 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:39.661 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:49.670 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:49.671 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:49.671 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:49.677 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:49.678 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:49.678 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:49.678 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:49.678 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:49.678 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:36:59.678 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:36:59.679 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:59.679 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:36:59.684 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:36:59.684 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:36:59.684 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:36:59.684 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:36:59.685 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:36:59.685 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:09.691 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:09.692 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:09.692 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:09.695 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:09.695 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:09.695 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:09.695 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:09.695 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:09.695 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:19.705 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:19.706 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:19.706 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:19.709 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:19.710 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:19.710 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:19.710 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:19.710 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:19.710 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:29.716 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:29.717 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:29.717 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:29.723 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:29.724 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:29.724 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:29.724 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:29.724 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:29.725 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:39.730 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:39.731 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:39.731 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:39.734 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:39.734 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:39.734 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:39.734 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:39.734 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:39.734 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:49.745 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:49.746 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:49.746 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:49.759 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:49.759 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:49.759 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:49.760 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:49.760 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:49.760 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:37:59.778 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:37:59.779 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:59.779 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:37:59.784 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:37:59.785 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:37:59.785 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:37:59.785 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:37:59.785 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:37:59.785 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:09.787 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:09.788 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:09.788 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:09.791 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:09.791 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:09.791 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:09.791 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:09.791 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:09.791 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:19.807 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:19.808 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:19.808 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:19.815 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:19.815 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:19.815 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:19.815 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:19.816 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:19.816 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:29.826 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:29.827 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:29.827 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:29.830 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:29.830 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:29.830 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:29.830 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:29.830 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:29.830 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:39.848 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:39.848 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:39.848 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:39.900 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:39.900 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:39.900 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:39.900 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:39.900 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:39.900 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:49.908 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:49.909 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:49.909 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:49.912 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:49.913 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:49.913 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:49.913 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:49.913 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:49.913 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:38:59.913 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:38:59.914 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:59.914 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:38:59.917 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:38:59.917 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:38:59.917 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:38:59.917 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:38:59.917 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:38:59.917 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:39:09.924 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:39:09.925 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:09.925 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:09.936 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:39:09.937 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:39:09.937 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:39:09.937 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:39:09.937 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:39:09.937 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:39:19.952 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:39:19.952 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:19.952 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:19.954 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:39:19.955 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:39:19.955 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:39:19.955 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:39:19.955 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:39:19.955 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:39:29.966 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:39:29.966 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:29.966 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:29.969 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:39:29.969 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:39:29.969 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:39:29.969 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:39:29.969 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:39:29.969 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:39:39.982 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:39:39.984 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:39.984 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:39.996 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:39:39.997 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:39:39.997 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:39:39.998 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:39:39.998 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:39:39.998 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:39:49.999 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:39:49.999 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:49.999 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:39:50.003 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:39:50.003 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:39:50.003 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:39:50.003 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:39:50.003 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:39:50.003 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:00.015 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:00.016 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:00.016 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:00.021 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:00.021 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:00.021 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:00.021 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:00.021 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:00.021 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:10.022 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:10.022 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:10.022 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:10.028 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:10.029 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:10.029 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:10.029 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:10.029 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:10.029 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:20.036 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:20.036 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:20.036 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:20.039 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:20.040 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:20.040 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:20.040 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:20.040 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:20.040 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:30.049 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:30.049 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:30.049 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:30.052 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:30.052 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:30.052 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:30.053 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:30.053 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:30.053 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:40.058 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:40.059 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:40.059 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:40.062 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:40.063 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:40.063 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:40.063 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:40.063 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:40.063 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:40:50.063 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:40:50.064 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:50.064 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:40:50.069 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:40:50.069 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:40:50.069 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:40:50.070 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:40:50.070 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:40:50.070 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:00.076 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:00.077 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:00.077 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:00.080 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:00.080 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:00.080 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:00.080 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:00.080 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:00.080 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:10.094 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:10.095 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:10.095 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:10.098 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:10.098 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:10.098 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:10.098 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:10.098 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:10.098 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:20.097 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:20.098 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:20.098 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:20.104 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:20.105 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:20.105 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:20.105 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:20.105 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:20.105 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:30.112 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:30.113 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:30.113 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:30.124 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:30.124 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:30.124 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:30.125 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:30.125 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:30.125 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:40.116 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:40.116 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:40.116 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:40.120 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:40.120 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:40.120 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:40.120 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:40.120 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:40.120 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:41:50.119 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:41:50.120 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:50.120 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:41:50.126 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:41:50.126 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:41:50.126 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:41:50.126 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:41:50.126 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:41:50.126 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:00.122 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:00.124 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:00.124 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:00.136 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:00.136 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:00.136 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:00.137 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:00.137 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:00.137 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:10.127 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:10.127 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:10.127 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:10.131 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:10.131 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:10.131 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:10.131 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:10.132 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:10.132 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:20.138 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:20.139 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:20.139 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:20.144 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:20.144 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:20.144 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:20.144 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:20.144 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:20.144 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:30.146 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:30.146 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:30.146 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:30.154 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:30.155 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:30.155 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:30.155 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:30.156 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:30.156 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:40.168 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:40.169 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:40.169 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:40.182 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:40.182 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:40.182 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:40.183 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:40.183 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:40.183 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:42:50.188 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:42:50.189 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:50.189 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:42:50.196 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:42:50.196 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:42:50.196 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:42:50.197 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:42:50.197 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:42:50.197 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:00.212 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:00.213 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:00.213 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:00.225 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:00.226 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:00.226 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:00.226 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:00.227 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:00.227 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:10.226 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:10.226 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:10.226 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:10.231 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:10.231 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:10.231 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:10.231 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:10.231 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:10.231 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:20.240 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:20.241 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:20.241 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:20.244 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:20.244 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:20.244 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:20.244 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:20.244 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:20.244 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:30.247 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:30.248 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:30.248 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:30.259 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:30.260 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:30.260 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:30.260 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:30.260 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:30.260 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:40.270 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:40.271 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:40.271 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:40.281 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:40.281 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:40.281 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:40.282 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:40.282 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:40.282 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:43:50.294 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:43:50.295 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:50.295 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:43:50.306 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:43:50.306 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:43:50.306 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:43:50.307 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:43:50.307 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:43:50.307 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:00.311 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:00.311 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:00.311 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:00.317 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:00.317 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:00.317 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:00.317 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:00.317 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:00.317 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:10.324 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:10.325 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:10.325 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:10.330 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:10.330 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:10.330 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:10.330 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:10.330 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:10.330 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:20.339 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:20.340 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:20.340 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:20.351 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:20.352 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:20.352 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:20.352 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:20.352 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:20.352 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:30.367 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:30.367 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:30.368 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:30.374 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:30.375 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:30.375 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:30.375 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:30.375 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:30.375 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:40.382 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:40.383 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:40.383 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:40.393 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:40.393 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:40.393 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:40.394 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:40.394 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:40.394 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:44:50.409 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:44:50.409 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:50.409 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:44:50.413 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:44:50.413 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:44:50.413 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:44:50.413 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:44:50.413 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:44:50.413 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:00.414 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:00.414 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:00.414 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:00.422 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:00.422 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:00.422 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:00.422 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:00.423 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:00.423 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:10.437 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:10.438 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:10.438 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:10.448 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:10.448 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:10.448 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:10.449 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:10.449 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:10.449 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:20.458 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:20.459 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:20.459 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:20.469 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:20.470 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:20.470 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:20.471 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:20.471 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:20.471 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:30.478 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:30.478 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:30.478 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:30.481 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:30.482 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:30.482 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:30.482 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:30.482 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:30.482 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:40.493 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:40.494 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:40.494 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:40.500 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:40.500 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:40.500 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:40.500 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:40.500 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:40.500 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:45:50.505 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:45:50.506 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:50.506 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:45:50.516 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:45:50.517 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:45:50.517 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:45:50.517 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:45:50.518 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:45:50.518 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:00.530 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:00.532 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:00.532 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:00.543 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:00.544 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:00.545 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:00.545 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:00.545 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:10.553 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:10.554 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:10.554 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:10.565 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:10.566 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:46:10.566 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:10.566 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:10.566 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:10.567 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:20.568 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:20.569 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:20.569 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:20.575 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:20.576 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:46:20.576 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:20.576 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:20.576 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:20.576 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:30.583 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:30.584 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:30.584 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:30.594 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:30.594 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:46:30.594 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:30.595 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:30.595 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:30.595 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:40.600 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:40.601 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:40.601 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:40.609 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:40.610 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:46:40.610 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:40.610 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:40.611 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:40.611 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:46:50.616 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:46:50.616 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:50.616 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:46:50.620 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:46:50.620 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:46:50.620 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:46:50.620 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:46:50.620 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:46:50.620 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:00.632 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:00.634 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:00.634 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:00.645 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:00.645 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:00.645 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:00.646 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:00.646 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:00.646 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:10.660 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:10.660 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:10.660 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:10.664 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:10.664 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:10.664 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:10.664 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:10.664 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:10.664 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:20.675 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:20.676 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:20.676 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:20.682 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:20.682 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:20.682 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:20.682 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:20.682 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:20.682 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:30.691 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:30.692 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:30.692 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:30.702 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:30.702 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:30.702 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:30.703 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:30.703 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:30.703 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:40.708 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:40.709 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:40.709 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:40.716 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:40.716 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:40.716 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:40.716 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:40.716 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:40.716 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:47:50.720 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:47:50.721 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:50.721 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:47:50.731 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:47:50.732 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:47:50.732 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:47:50.732 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:47:50.732 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:47:50.733 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:00.747 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:00.748 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:00.748 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:00.760 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:00.760 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:00.760 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:00.761 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:00.761 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:00.761 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:10.766 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:10.767 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:10.767 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:10.777 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:10.778 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:10.778 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:10.778 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:10.779 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:10.779 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:20.785 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:20.786 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:20.786 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:20.796 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:20.797 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:20.797 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:20.797 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:20.798 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:20.798 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:30.805 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:30.806 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:30.806 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:30.817 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:30.818 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:30.818 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:30.818 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:30.818 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:30.818 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:40.822 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:40.823 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:40.823 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:40.832 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:40.832 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:40.832 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:40.833 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:40.833 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:40.833 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:48:50.836 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:48:50.836 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:50.837 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:48:50.847 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:48:50.848 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:48:50.848 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:48:50.848 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:48:50.848 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:48:50.848 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:00.859 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:00.860 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:00.860 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:00.863 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:00.863 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:00.863 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:00.863 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:00.863 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:00.863 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:10.875 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:10.876 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:10.876 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:10.879 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:10.879 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:10.879 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:10.879 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:10.879 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:10.879 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:20.885 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:20.887 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:20.887 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:20.898 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:20.898 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:20.898 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:20.899 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:20.899 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:20.899 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:30.911 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:30.911 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:30.911 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:30.914 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:30.915 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:30.915 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:30.915 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:30.915 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:30.915 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:40.921 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:40.921 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:40.921 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:40.925 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:40.925 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:40.925 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:40.925 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:40.925 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:40.925 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:49:50.932 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:49:50.933 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:50.933 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:49:50.943 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:49:50.944 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:49:50.944 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:49:50.944 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:49:50.945 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:49:50.945 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:00.953 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:00.954 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:00.954 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:00.965 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:00.966 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:00.966 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:00.966 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:00.966 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:00.966 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:10.978 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:10.979 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:10.979 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:10.989 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:10.990 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:10.990 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:10.991 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:10.991 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:10.991 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:21.002 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:21.003 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:21.003 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:21.014 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:21.015 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:21.015 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:21.015 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:21.015 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:21.015 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:31.024 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:31.025 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:31.025 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:31.034 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:31.034 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:31.034 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:31.034 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:31.034 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:31.034 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:41.038 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:41.039 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:41.039 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:41.052 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:41.053 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:41.053 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:41.053 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:41.053 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:41.053 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:50:51.059 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:50:51.060 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:51.060 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:50:51.070 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:50:51.071 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:50:51.071 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:50:51.071 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:50:51.071 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:50:51.071 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:01.081 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:01.082 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:01.082 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:01.092 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:01.093 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:01.093 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:01.093 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:01.093 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:01.093 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:11.104 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:11.105 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:11.105 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:11.115 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:11.115 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:11.115 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:11.116 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:11.116 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:11.116 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:21.122 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:21.123 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:21.123 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:21.134 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:21.134 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:21.134 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:21.135 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:21.135 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:21.135 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:31.137 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:31.138 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:31.138 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:31.149 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:31.149 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:31.149 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:31.150 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:31.150 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:31.150 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:41.155 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:41.156 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:41.156 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:41.167 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:41.168 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:41.168 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:41.169 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:41.169 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:41.169 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:51:51.176 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:51:51.177 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:51.177 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:51:51.186 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:51:51.187 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:51:51.187 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:51:51.187 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:51:51.187 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:51:51.187 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:01.192 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:01.194 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:01.194 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:01.206 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:01.206 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:01.206 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:01.207 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:01.207 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:01.207 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:11.222 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:11.223 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:11.223 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:11.226 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:11.226 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:11.226 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:11.226 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:11.226 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:11.226 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:21.239 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:21.239 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:21.239 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:21.248 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:21.249 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:21.249 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:21.250 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:21.250 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:21.250 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:31.265 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:31.266 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:31.266 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:31.276 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:31.277 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:31.277 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:31.277 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:31.277 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:31.277 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:41.279 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:41.280 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:41.280 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:41.288 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:41.289 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:41.289 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:41.289 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:41.289 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:41.289 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:52:51.293 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:52:51.294 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:51.294 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:52:51.305 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:52:51.305 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:52:51.305 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:52:51.306 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:52:51.306 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:52:51.306 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:01.310 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:01.311 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:01.311 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:01.320 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:01.320 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:01.320 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:01.321 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:01.321 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:01.321 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:11.329 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:11.329 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:11.330 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:11.340 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:11.340 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:11.340 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:11.341 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:11.341 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:11.341 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:21.343 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:21.344 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:21.344 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:21.348 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:21.348 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:21.348 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:21.348 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:21.348 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:21.348 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:31.361 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:31.362 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:31.362 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:31.365 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:31.365 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:31.365 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:31.365 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:31.365 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:31.365 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:41.385 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:41.386 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:41.386 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:41.390 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:41.390 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:41.390 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:41.391 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:41.391 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:41.391 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:53:51.398 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:53:51.399 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:51.399 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:53:51.402 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:53:51.402 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:53:51.402 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:53:51.402 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:53:51.402 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:53:51.402 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:01.413 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:01.415 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:01.415 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:01.426 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:01.427 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:01.427 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:01.427 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:01.427 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:01.427 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:11.442 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:11.442 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:11.442 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:11.446 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:11.446 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:11.446 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:11.446 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:11.446 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:11.446 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:21.452 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:21.453 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:21.453 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:21.459 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:21.459 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:21.459 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:21.459 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:21.459 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:21.459 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:31.464 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:31.464 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:31.464 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:31.475 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:31.476 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:31.476 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:31.476 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:31.476 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:31.476 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:41.476 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:41.477 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:41.477 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:41.483 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:41.483 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:41.483 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:41.483 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:41.483 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:41.484 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:54:51.487 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:54:51.488 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:51.488 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:54:51.491 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:54:51.492 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:54:51.492 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:54:51.492 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:54:51.492 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:54:51.492 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:01.488 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:01.489 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:01.489 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:01.501 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:01.502 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:01.502 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:01.502 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:01.503 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:01.503 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:11.511 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:11.513 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:11.513 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:11.520 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:11.520 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:11.520 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:11.521 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:11.521 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:11.521 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:21.514 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:21.515 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:21.515 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:21.519 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:21.519 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:21.519 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:21.519 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:21.520 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:21.520 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:31.521 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:31.521 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:31.521 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:31.524 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:31.524 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:31.524 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:31.524 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:31.524 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:31.524 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:41.527 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:41.527 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:41.527 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:41.532 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:41.533 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:41.533 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:41.533 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:41.533 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:41.533 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:55:51.534 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:55:51.535 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:51.535 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:55:51.540 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:55:51.541 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:55:51.541 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:55:51.541 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:55:51.541 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:55:51.541 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:01.554 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:01.555 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:01.555 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:01.561 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:01.561 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:01.561 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:01.561 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:01.561 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:11.572 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:11.574 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:11.574 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:11.584 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:11.584 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:56:11.584 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:11.585 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:11.585 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:11.585 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:21.591 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:21.591 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:21.591 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:21.595 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:21.595 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:56:21.596 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:21.596 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:21.596 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:21.596 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:31.609 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:31.610 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:31.610 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:31.619 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:31.620 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:56:31.620 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:31.620 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:31.620 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:31.620 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:41.630 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:41.631 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:41.631 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:41.636 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:41.636 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:56:41.636 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:41.637 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:41.637 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:41.637 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:56:51.645 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:56:51.646 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:51.646 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:56:51.649 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:56:51.649 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:56:51.649 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:56:51.649 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:56:51.649 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:56:51.649 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:01.663 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:01.664 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:01.664 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:01.668 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:01.668 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:01.668 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:01.668 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:01.668 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:01.668 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:11.669 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:11.669 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:11.669 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:11.673 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:11.673 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:11.673 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:11.674 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:11.674 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:11.674 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:21.682 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:21.683 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:21.683 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:21.693 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:21.693 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:21.693 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:21.693 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:21.693 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:21.693 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:31.703 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:31.704 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:31.704 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:31.708 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:31.708 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:31.708 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:31.708 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:31.708 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:31.708 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:41.711 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:41.712 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:41.712 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:41.719 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.NetworkStream.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Http.HttpConnectionPool.SendWithNtProxyAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Net.Http.HttpConnectionWaiter`1.WaitForConnectionWithTelemetryAsync(HttpRequestMessage request, HttpConnectionPool pool, Boolean async, CancellationToken requestCancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.TaskAwaiter.<>c.<OutputWaitEtwEvents>b__12_0(Action innerContinuation, Task innerTask)
   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.Execute()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---

   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:41.720 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:41.720 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:41.720 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:41.720 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:41.720 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2025-03-31 17:57:51.735 +05:30 [DBG] Executing HealthCheck collector HostedService.
2025-03-31 17:57:51.735 +05:30 [INF] Start processing HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:51.735 +05:30 [INF] Sending HTTP request GET http://localhost:44302/health-status
2025-03-31 17:57:51.739 +05:30 [ERR] GetHealthReport threw an exception when trying to get report from http://localhost:44302/health-status configured with name SkillMatrixManagement Health Status.
System.Net.Http.HttpRequestException: An error occurred while sending the request.
 ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|4_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142
2025-03-31 17:57:51.739 +05:30 [INF] Notification is sent on same window time.
2025-03-31 17:57:51.739 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2025-03-31 17:57:51.739 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2025-03-31 17:57:51.739 +05:30 [DBG] HealthReportCollector has completed.
2025-03-31 17:57:51.739 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
