// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkillMatrixManagement.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace SkillMatrixManagement.Migrations.SkillMatrixManagementApplicationDb
{
    [DbContext(typeof(SkillMatrixManagementApplicationDbContext))]
    partial class SkillMatrixManagementApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.PostgreSql)
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkillMatrixManagement.Domain.CustomUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IdentityUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("CustomUsers", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CategoryName"), "HASH");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("IsUpdated");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsUpdated"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.ToTable("AppCategory", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Name")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "HASH");

                    b.ToTable("AppDepartment", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.DepartmentInternalRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Position");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Position"), "HASH");

                    b.HasIndex("RoleDescription");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RoleDescription"), "HASH");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RoleName"), "HASH");

                    b.ToTable("AppDepartmentInternalRole", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.DepartmentManager", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("DepartmentId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DepartmentId"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("ManagerId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ManagerId"), "HASH");

                    b.ToTable("AppDepartmentManager", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.DepartmentRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("InternalRoleId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("DepartmentId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DepartmentId"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("InternalRoleId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("InternalRoleId"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.ToTable("AppDepartmentRole", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.EmployeeSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CoreSkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EndorsedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("EndorsedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ManagerAssignedProficiency")
                        .HasColumnType("text");

                    b.Property<string>("SelfAssessedProficiency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CoreSkillName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CoreSkillName"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("EndorsedAt");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("EndorsedAt"), "HASH");

                    b.HasIndex("EndorsedBy");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("EndorsedBy"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("ManagerAssignedProficiency");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ManagerAssignedProficiency"), "HASH");

                    b.HasIndex("SelfAssessedProficiency");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SelfAssessedProficiency"), "HASH");

                    b.HasIndex("SkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillId"), "HASH");

                    b.HasIndex("UserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserId"), "HASH");

                    b.ToTable("AppEmployeeSkill", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsQueued")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreatedBy");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatedBy"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("DeliveredAt");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeliveredAt"), "HASH");

                    b.HasIndex("DepartmentId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DepartmentId"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("IsDelivered");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDelivered"), "HASH");

                    b.HasIndex("IsQueued");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsQueued"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("NotificationName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("NotificationName"), "HASH");

                    b.ToTable("AppNotification", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Name")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "HASH");

                    b.ToTable("AppPermission", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.ProficiencyLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Level")
                        .IsUnique();

                    b.ToTable("AppProficiencyLevel", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpectedEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDelayed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsOngoing")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("AppProject", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.ProjectEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreatedBy");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatedBy"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("ProjectId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ProjectId"), "HASH");

                    b.HasIndex("UserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserId"), "HASH");

                    b.ToTable("AppProjectEmployee", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.ReportAnalytics", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Dictionary<string, string>>("DataSnapshot")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GeneratedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GeneratedByUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DataSnapshot");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DataSnapshot"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("GeneratedAt");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("GeneratedAt"), "HASH");

                    b.HasIndex("GeneratedBy");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("GeneratedBy"), "HASH");

                    b.HasIndex("GeneratedByUserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("GeneratedByUserId"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("ReportType")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ReportType"), "HASH");

                    b.ToTable("AppReportAnalytics", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Name")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "HASH");

                    b.ToTable("AppRole", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("PermissionId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("PermissionId"), "HASH");

                    b.HasIndex("RoleId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RoleId"), "HASH");

                    b.ToTable("AppRolePermission", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("InternalRoleId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CategoryId"), "HASH");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("InternalRoleId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("InternalRoleId"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Name");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "HASH");

                    b.ToTable("AppSkill", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ChangedProficiencyLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CoreSkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("UserIdBasedVersion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChangedProficiencyLevel");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ChangedProficiencyLevel"), "HASH");

                    b.HasIndex("Comment");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Comment"), "HASH");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CoreSkillName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CoreSkillName"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("UserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserId"), "HASH");

                    b.HasIndex("UserIdBasedVersion");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserIdBasedVersion"), "HASH");

                    b.ToTable("AppSkillHistory", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillMatrix", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ExpectedProficiencyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("DepartmentId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DepartmentId"), "HASH");

                    b.HasIndex("ExpectedProficiencyId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExpectedProficiencyId"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("SkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillId"), "HASH");

                    b.ToTable("AppSkillMatrix", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillRecommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("AlgorithmUsed")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<float>("ConfidenceScore")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("RecommendedSkillId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlgorithmUsed");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("AlgorithmUsed"), "HASH");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("ConfidenceScore");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConfidenceScore"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("GeneratedAt");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("GeneratedAt"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("RecommendedSkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RecommendedSkillId"), "HASH");

                    b.HasIndex("UserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserId"), "HASH");

                    b.ToTable("AppSkillRecommendation", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillRecommendationByManager", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillRecommenderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Comment");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Comment"), "HASH");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("SkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillId"), "HASH");

                    b.HasIndex("SkillRecommenderId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillRecommenderId"), "HASH");

                    b.HasIndex("UserId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserId"), "HASH");

                    b.ToTable("AppSkillRecommendationByManager", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillSubtopic", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasColumnType("jsonb");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReqExpertiseLevelId")
                        .HasColumnType("text");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("Name");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "HASH");

                    b.HasIndex("ReqExpertiseLevelId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ReqExpertiseLevelId"), "HASH");

                    b.HasIndex("SkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillId"), "HASH");

                    b.ToTable("AppSkillSubtopic", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsAvailable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyStamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ConcurrencyStamp"), "HASH");

                    b.HasIndex("CreationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreationTime"), "HASH");

                    b.HasIndex("CreatorId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CreatorId"), "HASH");

                    b.HasIndex("DeleterId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeleterId"), "HASH");

                    b.HasIndex("DeletionTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DeletionTime"), "HASH");

                    b.HasIndex("DepartmentId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DepartmentId"), "HASH");

                    b.HasIndex("Email");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Email"), "HASH");

                    b.HasIndex("Experience");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Experience"), "HASH");

                    b.HasIndex("ExtraProperties");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ExtraProperties"), "HASH");

                    b.HasIndex("FirstName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("FirstName"), "HASH");

                    b.HasIndex("Id");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Id"), "HASH");

                    b.HasIndex("IsAvailable");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsAvailable"), "HASH");

                    b.HasIndex("IsDeleted");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("IsDeleted"), "HASH");

                    b.HasIndex("LastModificationTime");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModificationTime"), "HASH");

                    b.HasIndex("LastModifierId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastModifierId"), "HASH");

                    b.HasIndex("LastName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("LastName"), "HASH");

                    b.HasIndex("PhoneNumber");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("PhoneNumber"), "HASH");

                    b.HasIndex("ProfilePhoto");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ProfilePhoto"), "HASH");

                    b.HasIndex("RoleId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RoleId"), "HASH");

                    b.HasIndex("SkillId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SkillId"), "HASH");

                    b.HasIndex("UserName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("UserName"), "HASH");

                    b.ToTable("AppUser", (string)null);
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.DepartmentManager", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.DepartmentRole", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.DepartmentInternalRole", "InternalRole")
                        .WithMany()
                        .HasForeignKey("InternalRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("InternalRole");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.EmployeeSkill", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.User", "Endorser")
                        .WithMany()
                        .HasForeignKey("EndorsedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SkillMatrixManagement.Models.Skill", null)
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillId");

                    b.HasOne("SkillMatrixManagement.Models.User", "User")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endorser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Notification", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("SkillMatrixManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.ProjectEmployee", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("SkillMatrixManagement.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.ReportAnalytics", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.User", "GeneratedByUser")
                        .WithMany()
                        .HasForeignKey("GeneratedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneratedByUser");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.RolePermission", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Skill", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.DepartmentInternalRole", "InternalRole")
                        .WithMany()
                        .HasForeignKey("InternalRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("InternalRole");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillHistory", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillMatrix", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillRecommendation", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Skill", "RecommendedSkill")
                        .WithMany()
                        .HasForeignKey("RecommendedSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecommendedSkill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillRecommendationByManager", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.User", "SkillRecommender")
                        .WithMany()
                        .HasForeignKey("SkillRecommenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("SkillRecommender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.SkillSubtopic", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.User", b =>
                {
                    b.HasOne("SkillMatrixManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("SkillMatrixManagement.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrixManagement.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.Skill", b =>
                {
                    b.Navigation("EmployeeSkills");
                });

            modelBuilder.Entity("SkillMatrixManagement.Models.User", b =>
                {
                    b.Navigation("EmployeeSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
